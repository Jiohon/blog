name: Deploy master branch to servers

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DEPLOYTOKEN: ${{ secrets.DEPLOYTOKEN }}

    steps:
      - name: Debug Configuration
        run: |
          echo "正在验证配置..."
          if [[ -z "${{ secrets.DEPLOYTOKEN }}" ]]; then echo "DEPLOYTOKEN 未配置"; else echo "DEPLOYTOKEN 已配置"; fi
          if [[ -z "${{ secrets.PRIVATE_KEY }}" ]]; then echo "PRIVATE_KEY 未配置"; else echo "PRIVATE_KEY 已配置"; fi
          if [[ -z "${{ secrets.HOST }}" ]]; then echo "HOST 未配置"; else echo "HOST 已配置"; fi
          if [[ -z "${{ secrets.USER }}" ]]; then echo "USER 未配置"; else echo "USER 已配置"; fi
          if [[ -z "${{ secrets.PORT }}" ]]; then echo "PORT 未配置"; else echo "PORT 已配置"; fi
          if [[ -z "${{ secrets.TARGET }}" ]]; then echo "TARGET 未配置"; else echo "TARGET 已配置"; fi

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: false # 先克隆主仓库
          token: ${{ secrets.DEPLOYTOKEN }} # 使用 DEPLOYTOKEN 进行认证

      - name: Setup SSH and Clone Submodules
        run: |
          # 配置 SSH
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/deploy
          chmod 600 ~/.ssh/deploy

          # SSH 配置
          cat > ~/.ssh/config << EOF
          Host github.com
            HostName github.com
            User git
            IdentityFile ~/.ssh/deploy
            StrictHostKeyChecking no
            UserKnownHostsFile=/dev/null
            LogLevel ERROR
          EOF

          # 测试 SSH 连接
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          ssh -T git@github.com || true

          # 配置 Git 使用 SSH
          git config --global url."git@github.com:".insteadOf "https://github.com/"

          # 初始化和更新子模块
          echo "正在初始化子模块..."
          git submodule init

          echo "正在更新子模块..."
          git submodule update --recursive --remote --force

          # 确保子模块获取最新内容
          echo "确保子模块已更新到最新提交..."
          git submodule foreach 'git checkout $(git config -f $toplevel/.gitmodules submodule.$name.branch || echo "main") && git pull'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build Project
        run: pnpm build

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ${{ secrets.USER }}
          REMOTE_PORT: ${{ secrets.PORT }}
          TARGET: ${{ secrets.TARGET }}
          SOURCE: "public/"
