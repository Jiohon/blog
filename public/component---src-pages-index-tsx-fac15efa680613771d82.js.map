{"version":3,"file":"component---src-pages-index-tsx-fac15efa680613771d82.js","mappings":"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","sources":["webpack://hushes/./src/components/Hero.tsx","webpack://hushes/./src/components/Heading.tsx","webpack://hushes/./src/pages/index.tsx"],"sourcesContent":["import React from 'react'\n\ninterface Props {\n  title: string\n  highlight?: number\n  subTitle?: string\n  children?: React.ReactNode\n  index?: boolean\n}\n\n/**\n * @description 大标题\n */\n\nexport const Hero = ({ highlight, subTitle, title, children, index }: Props) => {\n  return (\n    <header className={`hero ${index ? 'index' : ''}`}>\n      {subTitle && (\n        <div className=\"sub-title\">\n          {highlight && <span className=\"highlight\">{highlight}</span>}\n          {subTitle}\n        </div>\n      )}\n      {title && <h1>{title}</h1>}\n      {children && children}\n    </header>\n  )\n}\n","import { Link } from 'gatsby'\nimport React from 'react'\n\ninterface Props {\n  title: string\n  description?: string\n  slug?: string\n}\n\n/**\n * @description 标题\n */\n\nexport const Heading = ({ title, description, slug }: Props) => {\n  return (\n    <h2 className=\"home-heading\">\n      <div>\n        <div className=\"title\">{title}</div>\n        {description && <div className=\"description\">{description}</div>}\n      </div>\n      {slug && (\n        <Link className=\"button\" to={slug}>\n          View all\n        </Link>\n      )}\n    </h2>\n  )\n}\n","import { graphql, Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport React, { useMemo } from 'react'\nimport Helmet from 'react-helmet'\n\nimport { Heading } from '../components/Heading'\nimport { Hero } from '../components/Hero'\nimport { SEO } from '../components/SEO'\nimport { Layout } from '../layout/index'\nimport { IndexQueryQuery } from '../typings/graphql-type'\nimport config from '../utils/config'\nimport { getSimplifiedPosts, slugify } from '../utils/helpers'\n\nexport default function Index({ data }: { data: IndexQueryQuery }) {\n  const latest = data.latest.edges\n  const Populars = data.Populars.edges\n  const simplifiedLatest = useMemo(() => getSimplifiedPosts(latest), [latest])\n  const simplifiedPopulars = useMemo(\n    () => getSimplifiedPosts(Populars, { shortTitle: false, thumbnails: true }),\n    [Populars]\n  )\n\n  return (\n    <div>\n      <Helmet title={config.siteTitle} />\n      <SEO />\n\n      <div className=\"container\">\n        <div className=\"hero-wrapper\">\n          <Hero title=\"Hi, I'm  Hush\" index>\n            <p className=\"hero-description small width\">\n              𝑰 𝒉𝒐𝒑𝒆 𝒚𝒐𝒖 𝒍𝒊𝒗𝒆 𝒂 𝒍𝒊𝒇𝒆 𝒚𝒐𝒖‘𝒓𝒆 𝒑𝒓𝒐𝒖𝒅 𝒐𝒇. 𝑰𝒇 𝒚𝒐𝒖 𝒇𝒊𝒏𝒅 𝒕𝒉𝒂𝒕 𝒚𝒐𝒖’𝒓𝒆 𝒏𝒐𝒕, 𝑰 𝒉𝒐𝒑𝒆 𝒚𝒐𝒖 𝒉𝒂𝒗𝒆 𝒕𝒉𝒆 𝒔𝒕𝒓𝒆𝒏𝒈𝒕𝒉 𝒕𝒐 𝒔𝒕𝒂𝒓𝒕\n              𝒂𝒍𝒍 𝒐𝒗𝒆𝒓 𝒂𝒈𝒂𝒊𝒏. <br />\n              <br />\n              我希望你过着自己引以为傲的生活。 如果你发现事实并非如此，我希望你有勇气重新开始。\n            </p>\n            <p className=\"hero-description small width\">𝑯𝒂𝒗𝒆 𝒂 𝒈𝒐𝒐𝒅 𝒅𝒂𝒚. </p>\n          </Hero>\n        </div>\n      </div>\n      <div className=\"container\">\n        <section className=\"segment\">\n          <Heading title=\"最近内容\" slug=\"/blog\" />\n\n          <div className=\"post-preview\">\n            {simplifiedLatest.map((post) => {\n              return (\n                <div className=\"anchored card\" key={post.slug}>\n                  <time>{post.date}</time>\n                  <Link className=\"card-header\" to={post.slug}>\n                    {post.title}\n                  </Link>\n                  <div className=\"anchored categories\">\n                    {post.categories\n                      .filter((cat) => cat !== 'Highlight')\n                      .map((cat) => {\n                        return (\n                          <Link className=\"cat\" to={`/categories/${slugify(cat)}`} key={slugify(cat)}>\n                            {cat}\n                          </Link>\n                        )\n                      })}\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </section>\n\n        {/* 查找posts目录下带有 Popular 的markdown文件 */}\n        {simplifiedPopulars.length > 0 && (\n          <section className=\"segment\">\n            <Heading title=\"热门内容\" />\n\n            <div className=\"highlight-preview\">\n              {simplifiedPopulars.map((post) => {\n                return (\n                  <div className=\"muted card flex\" key={`popular-${post.slug}`}>\n                    {post.thumbnail && <Img style={{ marginRight: '5px' }} fixed={post.thumbnail} />}\n                    <div>\n                      <time>{post.date}</time>\n                      <Link className=\"card-header\" to={post.slug}>\n                        {post.title}\n                      </Link>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          </section>\n        )}\n      </div>\n    </div>\n  )\n}\n\nIndex.Layout = Layout\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    latest: allMarkdownRemark(\n      limit: 6\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            categories\n          }\n        }\n      }\n    }\n    Populars: allMarkdownRemark(\n      limit: 12\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { eq: \"Popular\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            thumbnail {\n              childImageSharp {\n                fixed(width: 50, height: 50) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Hero","highlight","subTitle","title","children","index","React","className","Heading","description","slug","Link","to","Index","data","latest","edges","Populars","simplifiedLatest","useMemo","getSimplifiedPosts","simplifiedPopulars","shortTitle","thumbnails","Helmet","config","SEO","map","post","key","date","categories","filter","cat","slugify","length","thumbnail","Img","style","marginRight","fixed","Layout"],"sourceRoot":""}