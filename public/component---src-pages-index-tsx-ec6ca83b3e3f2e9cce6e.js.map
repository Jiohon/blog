{"version":3,"file":"component---src-pages-index-tsx-ec6ca83b3e3f2e9cce6e.js","mappings":"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","sources":["webpack://hushes/./src/components/BriefHeader/style.ts","webpack://hushes/./src/components/BriefHeader/index.tsx","webpack://hushes/./src/components/Heading/style.ts","webpack://hushes/./src/components/Heading/index.tsx","webpack://hushes/./src/pages/index.tsx","webpack://hushes/./src/styles/components/pages.ts"],"sourcesContent":["import styled from 'styled-components'\n\nexport const BriefHeader = styled.header`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  padding: 0.5rem 0;\n  position: relative;\n  @media screen and (min-width: 700px) {\n    padding: 2.5rem 0 0.5rem;\n    &.index {\n      padding: 3rem 0 0 0;\n    }\n  }\n`\n\nexport const BriefSubTitle = styled.div`\n  color: ${(props) => props.theme.fontColorMuted};\n  font-weight: 500;\n  font-size: 1rem;\n  margin-bottom: 0.4rem;\n`\n\nexport const BriefTitle = styled.h1`\n  font-size: 1.5rem;\n  line-height: 1.1;\n  font-weight: 700;\n  letter-spacing: -0.06rem;\n  color: ${(props) => props.theme.fontColorHeading};\n  margin: 0 !important;\n\n  @media screen and (min-width: 700px) {\n    font-size: 2rem;\n    letter-spacing: -0.08rem;\n  }\n`\n\nexport const BriefPurpleTitle = styled.span`\n  color: ${(props) => props.theme.highlightColor};\n`\n","import React from 'react'\nimport { BriefHeader as Header, BriefTitle } from './style'\n\ninterface Props {\n  title?: string | null\n  highlight?: number\n  subTitle?: string\n  children?: React.ReactNode\n  index?: boolean\n}\n\nexport const BriefHeader = ({ highlight, subTitle, title, children, index }: Props) => {\n  return (\n    <Header className={index ? 'index' : ''}>\n      {/* {subTitle && (\n        <BriefSubTitle>\n          {highlight && <PurpleTitle>{highlight}</PurpleTitle>}\n          {subTitle}\n        </BriefSubTitle>\n      )} */}\n      {title && <BriefTitle>{title}</BriefTitle>}\n      {children && children}\n    </Header>\n  )\n}\n","import { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nexport const HeadingContainer = styled.h2`\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 0;\n  padding: 0;\n`\n\nexport const HeadingTitle = styled.div`\n  font-size: 1.4rem;\n  margin-bottom: 0.75rem;\n  font-family: ${(props) => props.theme.fontFamilyBase};\n  font-weight: 700;\n  letter-spacing: -0.03rem;\n  @media screen and (min-width: 700px) {\n    font-size: 1.6rem;\n  }\n`\n\nexport const HeadingLink = styled(Link)`\n  -webkit-appearance: none;\n  background: ${(props) => props.theme.buttonBackgroundColor};\n  display: inline-flex;\n  align-items: center;\n  padding: 0.6rem 1rem;\n  font-family: ${(props) => props.theme.fontFamilyBase};\n  line-height: 1;\n  border-radius: ${(props) => props.theme.borderRadius};\n  font-size: 0.9rem;\n  cursor: pointer;\n  font-weight: 500;\n  color: ${(props) => props.theme.fontColorBase};\n  border: 1px solid ${(props) => props.theme.borderColor};\n  gap: 0.25rem;\n\n  &:hover {\n    color: ${(props) => props.theme.fontColorBright};\n    border-color: ${(props) => props.theme.borderColorHover};\n  }\n`\n","import React from 'react'\nimport { HeadingContainer, HeadingLink, HeadingTitle } from './style'\n\ninterface Props {\n  title: string\n  description?: string\n  slug?: string\n}\n\n/**\n * @description 标题\n */\n\nexport const Heading = ({ title, slug }: Props) => {\n  return (\n    <HeadingContainer>\n      <div>\n        <HeadingTitle>{title}</HeadingTitle>\n      </div>\n      {slug && <HeadingLink to={slug}>View all</HeadingLink>}\n    </HeadingContainer>\n  )\n}\n","import { graphql, PageProps } from 'gatsby'\nimport Img from 'gatsby-image'\nimport React, { useMemo } from 'react'\nimport Helmet from 'react-helmet'\nimport { GlobalContainer } from '../styles/components/global'\nimport {\n  BriefDescription,\n  BriefWrapper,\n  HighlightCard,\n  HighlightPreview,\n  IndexSection,\n  RecentCard,\n  RecentPreview,\n  TagLink,\n  TagLinks,\n  Time,\n  TitleLink,\n} from '../styles/components/pages'\n\nimport { BriefHeader } from '../components/BriefHeader'\nimport { Heading } from '../components/Heading'\nimport { SEO } from '../components/SEO'\nimport { Layout } from '../layout/index'\nimport config from '../utils/config'\nimport { getSimplifiedPosts, slugify } from '../utils/helpers'\nimport { IndexQuery } from './__generated__/IndexQuery'\n\nexport default function Index({ data }: PageProps<IndexQuery>) {\n  const latest = data.latest.edges\n  const Highlights = data.Highlights.edges\n  const simplifiedLatest = useMemo(() => getSimplifiedPosts(latest), [latest])\n  const simplifiedHighlights = useMemo(\n    () => getSimplifiedPosts(Highlights, { shortTitle: false, thumbnails: true }),\n    [Highlights]\n  )\n\n  return (\n    <>\n      <Helmet title={config.siteTitle} />\n      <SEO />\n\n      <GlobalContainer>\n        <BriefWrapper>\n          <BriefHeader title=\"Hi, I'm  Hush\" index>\n            <BriefDescription>\n              𝑰 𝒉𝒐𝒑𝒆 𝒚𝒐𝒖 𝒍𝒊𝒗𝒆 𝒂 𝒍𝒊𝒇𝒆 𝒚𝒐𝒖‘𝒓𝒆 𝒑𝒓𝒐𝒖𝒅 𝒐𝒇. 𝑰𝒇 𝒚𝒐𝒖 𝒇𝒊𝒏𝒅 𝒕𝒉𝒂𝒕 𝒚𝒐𝒖’𝒓𝒆 𝒏𝒐𝒕, 𝑰 𝒉𝒐𝒑𝒆 𝒚𝒐𝒖 𝒉𝒂𝒗𝒆 𝒕𝒉𝒆 𝒔𝒕𝒓𝒆𝒏𝒈𝒕𝒉 𝒕𝒐 𝒔𝒕𝒂𝒓𝒕\n              𝒂𝒍𝒍 𝒐𝒗𝒆𝒓 𝒂𝒈𝒂𝒊𝒏. <br />\n              <br />\n              我希望你过着自己引以为傲的生活。 如果你发现事实并非如此，我希望你有勇气重新开始。\n            </BriefDescription>\n            <BriefDescription>𝑯𝒂𝒗𝒆 𝒂 𝒈𝒐𝒐𝒅 𝒅𝒂𝒚. </BriefDescription>\n          </BriefHeader>\n        </BriefWrapper>\n      </GlobalContainer>\n\n      <GlobalContainer>\n        <IndexSection>\n          <Heading title=\"最近内容\" slug=\"/blog\" />\n          <RecentPreview>\n            {simplifiedLatest.map((post) => {\n              return (\n                <RecentCard key={post.slug}>\n                  <Time className=\"recent\">{post.date}</Time>\n                  <TitleLink to={post.slug}>{post.title}</TitleLink>\n                  <TagLinks>\n                    {post.categories\n                      .filter((cat) => cat !== 'Highlight')\n                      .map((cat) => {\n                        return (\n                          <TagLink to={`/categories/${slugify(cat)}`} key={slugify(cat)}>\n                            {cat}\n                          </TagLink>\n                        )\n                      })}\n                  </TagLinks>\n                </RecentCard>\n              )\n            })}\n          </RecentPreview>\n        </IndexSection>\n        {/* 查找posts目录下带有 Highlight 的markdown文件 */}\n        {simplifiedHighlights.length > 0 && (\n          <IndexSection>\n            <Heading title=\"热门内容\" />\n\n            <HighlightPreview>\n              {simplifiedHighlights.map((post) => {\n                return (\n                  <HighlightCard key={`Highlight-${post.slug}`}>\n                    {post.thumbnail && <Img style={{ marginRight: '5px' }} fixed={post.thumbnail} />}\n                    <div>\n                      <Time>{post.date}</Time>\n                      <TitleLink to={post.slug}>{post.title}</TitleLink>\n                    </div>\n                  </HighlightCard>\n                )\n              })}\n            </HighlightPreview>\n          </IndexSection>\n        )}\n      </GlobalContainer>\n    </>\n  )\n}\n\nIndex.Layout = Layout\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    latest: allMarkdownRemark(\n      limit: 6\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            categories\n          }\n        }\n      }\n    }\n    Highlights: allMarkdownRemark(\n      limit: 12\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { eq: \"Highlight\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            thumbnail {\n              childImageSharp {\n                fixed(width: 50, height: 50) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { GlobalCard, GlobalContainer } from './global'\nimport { TemplateContent, TemplateGrid, TemplateSection } from './templates'\n\nexport const BlogGrid = styled(TemplateGrid)``\n\nexport const BlogContent = styled(TemplateContent)``\n\nexport const IndexSection = styled(TemplateSection)``\n\nexport const BriefWrapper = styled.div`\n  display: block;\n\n  @media screen and (min-width: 700px) {\n    display: flex;\n    align-items: center;\n    gap: 3rem;\n  }\n`\n\nexport const BriefDescription = styled.p`\n  -webkit-font-smoothing: antialiased;\n  margin-top: 3rem;\n  margin-bottom: 0;\n  font-size: 1.1rem;\n  line-height: 1.4;\n  color: ${(props) => props.theme.fontColorBase};\n  font-weight: 500;\n`\n\nexport const RecentPreview = styled.div`\n  display: grid;\n  gap: 1rem;\n\n  @media screen and (min-width: 700px) {\n    grid-template-columns: repeat(3, 1fr);\n    gap: 1.5rem;\n  }\n`\n\nexport const RecentCard = styled(GlobalCard)`\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n  min-height: 9rem;\n`\n\nexport const HighlightPreview = styled.div`\n  display: grid;\n  gap: 1rem;\n\n  @media screen and (min-width: 700px) {\n    grid-template-columns: repeat(2, 1fr);\n    gap: 1.5rem;\n  }\n\n  @media screen and (min-width: 1060px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`\n\nexport const HighlightCard = styled(GlobalCard)`\n  background: transparent;\n  padding: 1.5rem;\n  border: 2px solid ${(props) => props.theme.borderColor};\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`\n\nexport const Time = styled.time`\n  display: block;\n  font-family: ${(props) => props.theme.fontFamilyMonospace};\n  color: ${(props) => props.theme.fontColorBright};\n  font-size: 0.8rem;\n\n  &.recent {\n    color: ${(props) => props.theme.cardTimeColor};\n  }\n`\n\nexport const TitleLink = styled(Link)`\n  display: block;\n  width: 100%;\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-family: ${(props) => props.theme.fontFamilyBase};\n  color: ${(props) => props.theme.fontColorHeading};\n  font-weight: 700;\n  margin: 0.25rem 0 0.5rem;\n  padding: 0;\n  border: 0;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n    color: ${(props) => props.theme.fontColorBright};\n  }\n`\n\nexport const TagLinks = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const TagLink = styled(Link)`\n  font-family: ${(props) => props.theme.fontFamilyMonospace};\n  font-size: 0.8rem;\n  color: ${(props) => props.theme.fontColorMuted};\n  text-decoration: underline;\n`\n\nexport const SunsetContainer = styled(GlobalContainer)`\n  padding-top: 3rem;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 2.2rem;\n\n  @media screen and (max-width: 1000px) {\n    padding-top: 2rem;\n    gap: 1.5rem;\n  }\n  @media screen and (max-width: 480px) {\n    padding-top: 1rem;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 0.8rem;\n  }\n`\n"],"names":["BriefHeader","styled","BriefTitle","props","theme","fontColorMuted","fontColorHeading","highlightColor","highlight","subTitle","title","children","index","React","Header","className","HeadingContainer","HeadingTitle","fontFamilyBase","HeadingLink","Link","withConfig","buttonBackgroundColor","borderRadius","fontColorBase","borderColor","fontColorBright","borderColorHover","Heading","slug","to","Index","data","latest","edges","Highlights","simplifiedLatest","useMemo","getSimplifiedPosts","simplifiedHighlights","shortTitle","thumbnails","Helmet","config","SEO","GlobalContainer","BriefWrapper","BriefDescription","IndexSection","RecentPreview","map","post","RecentCard","key","Time","date","TitleLink","TagLinks","categories","filter","cat","TagLink","slugify","length","HighlightPreview","HighlightCard","thumbnail","Img","style","marginRight","fixed","Layout","BlogGrid","TemplateGrid","BlogContent","TemplateContent","TemplateSection","GlobalCard","fontFamilyMonospace","cardTimeColor","SunsetContainer"],"sourceRoot":""}