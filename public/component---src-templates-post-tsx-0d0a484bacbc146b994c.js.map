{"version":3,"file":"component---src-templates-post-tsx-0d0a484bacbc146b994c.js","mappings":"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","sources":["webpack://hushes/./src/components/Sidebar/PostSidebar.tsx","webpack://hushes/./src/templates/post.tsx"],"sourcesContent":["import { Link } from 'gatsby'\nimport React from 'react'\nimport { Anchor, PostSideImage, PostSideTag, SideCard, SideSticky, SideTags, SideTitle } from './style'\n\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport { FileFilterInput } from '../../../gatsby-graphql'\nimport { slugify } from '../../utils/helpers'\n\n/**\n * @description ‰æßËæπÊñáÁ´†ËØ¶ÁªÜ‰ø°ÊÅØ\n */\n\ninterface Props {\n  date: string\n  tags?: (string | null)[] | null\n  categories?: (string | null)[] | null\n  thumbnail?: FileFilterInput | null\n  headings?: ({ id?: string | null } | null)[] | null\n}\n\nexport const PostSidebar = ({ tags = [], date, categories = [], thumbnail, headings }: Props) => {\n  const categorys = categories?.filter((category) => category !== 'Highlight')\n  const { gatsbyImageData } = { ...thumbnail?.childImageSharp }\n\n  const onclick = (row: { id?: string | null }) => {\n    document.getElementById(row.id!)?.scrollIntoView(true)\n  }\n  return (\n    <aside>\n      <SideSticky>\n        {thumbnail && <PostSideImage image={gatsbyImageData as IGatsbyImageData} alt=\"\" />}\n        {/* <SideCard>\n        <h2>About me</h2>\n        <img alt=\"Tania\" className=\"sidebar-avatar\" />\n        <p>\n          Hello and thanks for visiting! My name is <Link to=\"/me\">Hush</Link>,\n          and this is my website and digital garden. üå±\n        </p>\n        <p>\n          I'm a software developer who writes articles and tutorials about\n          things that interest me. This site is and has always been free of ads,\n          trackers, social media, affiliates, and sponsored posts.\n        </p>\n        <p>I hope you enjoy the post and have a nice day.</p>\n      </SideCard> */}\n\n        <SideCard>\n          <SideTitle>Êó•Êúü</SideTitle>\n          <ul>\n            <li>ÂèëÂ∏É‰∫é {date}</li>\n          </ul>\n\n          <SideTitle>Á±ªÂà´</SideTitle>\n          {categorys && (\n            <ul>\n              {categorys.map((category) => {\n                return (\n                  <li key=\"category\">\n                    <Link to={`/categories/${slugify(category!)}`}>{category}</Link>\n                  </li>\n                )\n              })}\n            </ul>\n          )}\n\n          <SideTitle>Ê†áÁ≠æ</SideTitle>\n          <SideTags>\n            {tags &&\n              tags.map((tag) => {\n                return (\n                  <PostSideTag key={tag} to={`/tags/${slugify(tag!)}`} activeClassName=\"active\">\n                    {tag}\n                  </PostSideTag>\n                )\n              })}\n          </SideTags>\n        </SideCard>\n\n        <SideCard>\n          <SideTitle>ÁõÆÂΩï</SideTitle>\n          <ul style={{ marginBottom: 0 }}>\n            {headings &&\n              headings.map((item) => {\n                return (\n                  item && (\n                    <Anchor key={item.id} onClick={() => onclick(item)}>\n                      {item.id}\n                    </Anchor>\n                  )\n                )\n              })}\n          </ul>\n        </SideCard>\n      </SideSticky>\n    </aside>\n  )\n}\n","import { graphql, PageProps } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport { PostBySlugQuery } from '../../gatsby-graphql'\n\nimport { SEO } from '../components/SEO'\nimport { PostSidebar } from '../components/Sidebar/PostSidebar'\nimport { Layout } from '../layout/index'\nimport { GlobalContainer } from '../styles/components/global'\nimport { TemplateContent, TemplateGrid, TemplateHeader, TemplateSection } from '../styles/components/templates'\nimport config from '../utils/config'\n\n/**\n * @description ÊñáÁ´†È°µÈù¢\n * @date 23/10/2022\n * @export\n * @param {PageProps<PostBySlugQuery>} { data }\n * @return {*}\n */\nexport default function PostTemplate({ data }: PageProps<PostBySlugQuery>) {\n  const post = data.markdownRemark!\n  const { headings } = post\n  const { tags, categories, title, date, thumbnail } = { ...post?.frontmatter }\n  const { slug } = { ...post?.fields }\n\n  return (\n    <>\n      <Helmet title={`${title} | ${config.siteTitle}`} />\n      <SEO postPath={slug} postNode={post} postSEO />\n      <GlobalContainer>\n        <TemplateGrid>\n          <TemplateContent>\n            <TemplateHeader>{title}</TemplateHeader>\n            <TemplateSection>\n              <div id={slug as string} dangerouslySetInnerHTML={{ __html: post?.html as string }} />\n            </TemplateSection>\n          </TemplateContent>\n\n          <PostSidebar date={date} tags={tags} categories={categories} thumbnail={thumbnail} headings={headings} />\n        </TemplateGrid>\n      </GlobalContainer>\n    </>\n  )\n}\n\nPostTemplate.Layout = Layout\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      headings(depth: h4) {\n        id\n      }\n      html\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        tags\n        categories\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(width: 100, height: 100)\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["PostSidebar","tags","date","categories","thumbnail","headings","categorys","filter","category","gatsbyImageData","childImageSharp","___EmotionJSX","SideSticky","PostSideImage","image","alt","SideCard","SideTitle","map","key","Link","to","slugify","SideTags","tag","PostSideTag","activeClassName","style","marginBottom","item","Anchor","id","onClick","row","document","getElementById","_document$getElementB","scrollIntoView","PostTemplate","post","data","markdownRemark","frontmatter","title","slug","fields","Helmet","config","SEO","postPath","postNode","postSEO","GlobalContainer","TemplateGrid","TemplateContent","TemplateHeader","TemplateSection","dangerouslySetInnerHTML","__html","html","Layout"],"sourceRoot":""}