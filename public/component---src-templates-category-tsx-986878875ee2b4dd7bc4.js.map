{"version":3,"file":"component---src-templates-category-tsx-986878875ee2b4dd7bc4.js","mappings":"2QAyBe,SAASA,EAAiB,GAGoB,IAF3DC,EAAI,EAAJA,KAGQC,EAFG,EAAXC,YAEQD,SACAE,EAAeH,EAAKI,kBAApBD,WACFE,EAAQL,EAAKI,kBAAkBE,MAC/BC,GAAkBC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,IAAmBJ,EAAM,GAAE,CAACA,IAC5DK,EAAyB,IAAfP,EAAmB,wBAA0B,yBAE7D,OACEQ,EAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MACEA,EAAAA,EAAAA,IAACC,EAAAA,EAAM,CAACC,MAAUZ,EAAQ,MAAMa,EAAAA,EAAAA,aAChCH,EAAAA,EAAAA,IAACI,EAAAA,EAAG,OAEJJ,EAAAA,EAAAA,IAACK,EAAAA,GAAe,CAACC,GAAG,WAClBN,EAAAA,EAAAA,IAACO,EAAAA,GAAY,MACXP,EAAAA,EAAAA,IAACQ,EAAAA,GAAe,MACdR,EAAAA,EAAAA,IAACS,EAAAA,EAAW,CAACC,UAAWlB,EAAYmB,SAAUZ,EAASG,MAAOZ,KAC9DU,EAAAA,EAAAA,IAACY,EAAAA,EAAK,CAACvB,KAAMO,MAEfI,EAAAA,EAAAA,IAACa,EAAAA,EAAW,QAKtB,CAEAzB,EAAiB0B,OAASA,EAAAA,C","sources":["webpack://hushes/./src/templates/category.tsx"],"sourcesContent":["import { graphql, PageProps } from 'gatsby'\nimport React, { useMemo } from 'react'\nimport Helmet from 'react-helmet'\nimport { BriefHeader } from '../components/BriefHeader'\nimport { BlogSidebar } from '../components/Sidebar/BlogSidebar'\n\nimport { CategoryPageQuery, CategoryPageQueryVariables } from '../../gatsby-graphql'\nimport { Posts } from '../components/Posts'\nimport { SEO } from '../components/SEO'\nimport { Layout } from '../layout/index'\nimport { GlobalContainer } from '../styles/components/global'\nimport { TemplateContent, TemplateGrid } from '../styles/components/templates'\nimport config from '../utils/config'\nimport { getSimplifiedPosts } from '../utils/helpers'\n\n/**\n * @description 类别页面\n * @date 23/10/2022\n * @export\n * @param {PageProps<CategoryPageQuery, CategoryPageQueryVariables>} {\n *   data,\n *   pageContext,\n * }\n * @return {*}\n */\nexport default function CategoryTemplate({\n  data,\n  pageContext,\n}: PageProps<CategoryPageQuery, CategoryPageQueryVariables>) {\n  const { category } = pageContext\n  const { totalCount } = data.allMarkdownRemark\n  const posts = data.allMarkdownRemark.edges\n  const simplifiedPosts = useMemo(() => getSimplifiedPosts(posts), [posts])\n  const message = totalCount === 1 ? ' post categorized as:' : ' posts categorized as:'\n\n  return (\n    <>\n      <Helmet title={`${category} | ${config.siteTitle}`} />\n      <SEO />\n\n      <GlobalContainer as=\"header\">\n        <TemplateGrid>\n          <TemplateContent>\n            <BriefHeader highlight={totalCount} subTitle={message} title={category} />\n            <Posts data={simplifiedPosts} />\n          </TemplateContent>\n          <BlogSidebar />\n        </TemplateGrid>\n      </GlobalContainer>\n    </>\n  )\n}\n\nCategoryTemplate.Layout = Layout\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { categories: { in: [$category] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["CategoryTemplate","data","category","pageContext","totalCount","allMarkdownRemark","posts","edges","simplifiedPosts","useMemo","getSimplifiedPosts","message","___EmotionJSX","Helmet","title","config","SEO","GlobalContainer","as","TemplateGrid","TemplateContent","BriefHeader","highlight","subTitle","Posts","BlogSidebar","Layout"],"sourceRoot":""}