{"version":3,"file":"component---src-templates-post-tsx-d64460bd143e43586f51.js","mappings":"wMAUaA,EAAc,SAAC,GAUrB,IAAD,MATJC,KAAAA,OASI,MATG,GASH,EARJC,EAQI,EARJA,KAQI,IAPJC,WAAAA,OAOI,MAPS,GAOT,EANJC,EAMI,EANJA,UAOMC,EAAWF,aAAH,EAAGA,EAAYG,QAAO,SAACD,GAAD,MAA2B,YAAbA,CAAjC,IAEjB,OACEE,EAAAA,cAAAA,QAAAA,CAAOC,UAAU,gBACdJ,GACCG,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,cACbD,EAAAA,cAACE,EAAAA,EAAD,CAAKC,MAAK,UAAEN,EAAUO,uBAAZ,aAAEC,EAA2BF,SAiB3CH,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,qBACbD,EAAAA,cAAAA,KAAAA,KAAAA,MACAA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAAA,OAASL,IAGVG,GACCE,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAAA,MACAA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACM,EAAAA,KAAD,CAAMC,GAAE,gBAAiBC,EAAAA,EAAAA,IAAQV,IAAcA,MAMvDE,EAAAA,cAAAA,KAAAA,KAAAA,MACAA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,QACZP,EAAKe,KAAI,SAACC,GACT,OACEV,EAAAA,cAACM,EAAAA,KAAD,CAAMK,IAAKD,EAAKH,GAAE,UAAWC,EAAAA,EAAAA,IAAQE,GAAQT,UAAU,MAAMW,gBAAgB,UAC1EF,EAHN,MArDJ,E,8BCMQ,SAASG,EAAT,GAA+C,IACtDC,EADsD,EAAvBC,KACnBC,eAClB,EAAqDF,EAAKG,YAAlDvB,EAAR,EAAQA,KAAME,EAAd,EAAcA,WAAYsB,EAA1B,EAA0BA,MAAOvB,EAAjC,EAAiCA,KAAME,EAAvC,EAAuCA,UAEvC,OACEG,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACmB,EAAAA,EAAD,CAAQD,MAAUJ,EAAKG,YAAYC,MAAtB,MAAiCE,EAAAA,EAAAA,YAC9CpB,EAAAA,cAACqB,EAAAA,EAAD,CAAKC,SAAUR,EAAKS,OAAOC,KAAMC,SAAUX,EAAMY,SAAO,IACxD1B,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,QACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,mBACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,4BACbD,EAAAA,cAAAA,KAAAA,KAAKkB,IAEPlB,EAAAA,cAAAA,UAAAA,CAASC,UAAU,iBACjBD,EAAAA,cAAAA,MAAAA,CAAK2B,GAAIb,EAAKS,OAAOC,KAAMvB,UAAU,eAAe2B,wBAAyB,CAAEC,OAAQf,EAAKgB,UAIhG9B,EAAAA,cAACP,EAAD,CAAaE,KAAMA,EAAMD,KAAMA,EAAME,WAAYA,EAAYC,UAAWA,MAKjF,CAEDgB,EAAakB,OAASA,EAAAA,C","sources":["webpack://hushes/./src/components/PostSidebar.tsx","webpack://hushes/./src/templates/post.tsx"],"sourcesContent":["import { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport React from 'react'\n\nimport { slugify } from '../utils/helpers'\n\n/**\n * @description ‰æßËæπÊñáÁ´†ËØ¶ÁªÜ‰ø°ÊÅØ\n */\n\nexport const PostSidebar = ({\n  tags = [],\n  date,\n  categories = [],\n  thumbnail,\n}: {\n  tags: string[]\n  date: string\n  categories: string[]\n  thumbnail: Record<string, any>\n}) => {\n  const category = categories?.filter((category) => category !== 'Popular')\n\n  return (\n    <aside className=\"post-sidebar\">\n      {thumbnail && (\n        <div className=\"post-image\">\n          <Img fixed={thumbnail.childImageSharp?.fixed} />\n        </div>\n      )}\n      {/* <div className=\"post-sidebar-card\">\n        <h2>About me</h2>\n        <img alt=\"Tania\" className=\"sidebar-avatar\" />\n        <p>\n          Hello and thanks for visiting! My name is <Link to=\"/me\">Hush</Link>,\n          and this is my website and digital garden. üå±\n        </p>\n        <p>\n          I'm a software developer who writes articles and tutorials about\n          things that interest me. This site is and has always been free of ads,\n          trackers, social media, affiliates, and sponsored posts.\n        </p>\n        <p>I hope you enjoy the post and have a nice day.</p>\n      </div> */}\n      <div className=\"post-sidebar-card\">\n        <h2>Êó•Êúü</h2>\n        <ul>\n          <li>ÂèëÂ∏É‰∫é {date}</li>\n        </ul>\n\n        {category && (\n          <div>\n            <h2>Á±ªÂà´</h2>\n            <ul>\n              <li>\n                <Link to={`/categories/${slugify(category)}`}>{category}</Link>\n              </li>\n            </ul>\n          </div>\n        )}\n\n        <h2>Ê†áÁ≠æ</h2>\n        <div className=\"tags\">\n          {tags.map((tag) => {\n            return (\n              <Link key={tag} to={`/tags/${slugify(tag)}`} className=\"tag\" activeClassName=\"active\">\n                {tag}\n              </Link>\n            )\n          })}\n        </div>\n      </div>\n    </aside>\n  )\n}\n","import { graphql } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nimport { PostSidebar } from '../components/PostSidebar'\nimport { SEO } from '../components/SEO'\nimport { Layout } from '../layout/index'\nimport config from '../utils/config'\n\n/**\n * @description ÊñáÁ´† È°µÈù¢\n * @date 09/10/2022\n * @export\n * @param {*} { data }\n * @return {*}\n */\nexport default function PostTemplate({ data }: { data: any }) {\n  const post = data.markdownRemark\n  const { tags, categories, title, date, thumbnail } = post.frontmatter\n\n  return (\n    <>\n      <Helmet title={`${post.frontmatter.title} | ${config.siteTitle}`} />\n      <SEO postPath={post.fields.slug} postNode={post} postSEO />\n      <div className=\"container\">\n        <div className=\"grid\">\n          <div className=\"article-content\">\n            <div className=\"post-header medium width\">\n              <h1>{title}</h1>\n            </div>\n            <section className=\"segment small\">\n              <div id={post.fields.slug} className=\"post-content\" dangerouslySetInnerHTML={{ __html: post.html }} />\n            </section>\n          </div>\n\n          <PostSidebar date={date} tags={tags} categories={categories} thumbnail={thumbnail} />\n        </div>\n      </div>\n    </>\n  )\n}\n\nPostTemplate.Layout = Layout\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        tags\n        categories\n        thumbnail {\n          childImageSharp {\n            fixed(width: 80, height: 80) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["PostSidebar","tags","date","categories","thumbnail","category","filter","React","className","Img","fixed","childImageSharp","_thumbnail$childImage","Link","to","slugify","map","tag","key","activeClassName","PostTemplate","post","data","markdownRemark","frontmatter","title","Helmet","config","SEO","postPath","fields","slug","postNode","postSEO","id","dangerouslySetInnerHTML","__html","html","Layout"],"sourceRoot":""}