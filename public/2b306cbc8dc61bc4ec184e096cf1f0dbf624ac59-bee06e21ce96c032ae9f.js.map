{"version":3,"file":"2b306cbc8dc61bc4ec184e096cf1f0dbf624ac59-bee06e21ce96c032ae9f.js","mappings":"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","sources":["webpack://hushes/./src/components/BriefHeader/style.ts","webpack://hushes/./src/components/BriefHeader/index.tsx","webpack://hushes/./src/components/Posts/style.ts","webpack://hushes/./src/components/Posts/index.tsx","webpack://hushes/./src/components/Sidebar/BlogSidebar.tsx","webpack://hushes/./src/hooks/useGetTaxonomies.ts"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const BriefContainer = styled.header`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  padding: 0.5rem 0;\n  position: relative;\n  @media screen and (min-width: 700px) {\n    padding: 2.5rem 0 0.5rem;\n    &.index {\n      padding: 3rem 0 0 0;\n    }\n  }\n`\n\nexport const BriefSubTitle = styled.div`\n  color: rgb(${(props) => props.theme.gray8});\n  font-weight: 500;\n  font-size: 1rem;\n  margin-bottom: 0.4rem;\n`\n\nexport const BriefTitle = styled.h1`\n  font-size: 1.5rem;\n  line-height: 1.1;\n  font-weight: 700;\n  letter-spacing: -0.06rem;\n  color: rgb(${(props) => props.theme.gray10});\n  margin: 0 !important;\n\n  @media screen and (min-width: 700px) {\n    font-size: 2rem;\n    letter-spacing: -0.08rem;\n  }\n`\n\nexport const BriefPurpleTitle = styled.span`\n  color: rgb(${(props) => props.theme.purple5});\n`\n","import React from 'react'\nimport { BriefContainer, BriefPurpleTitle, BriefSubTitle, BriefTitle } from './style'\n\ninterface Props {\n  title?: string | null\n  highlight?: number\n  subTitle?: string\n  children?: React.ReactNode\n  index?: boolean\n}\n\n/**\n * @description 大标题\n */\n\nexport const BriefHeader = ({ highlight, subTitle, title, children, index }: Props) => {\n  return (\n    <BriefContainer className={index ? 'index' : ''}>\n      {subTitle && (\n        <BriefSubTitle>\n          {highlight && <BriefPurpleTitle>{highlight}</BriefPurpleTitle>}\n          {subTitle}\n        </BriefSubTitle>\n      )}\n      {title && <BriefTitle>{title}</BriefTitle>}\n      {children && children}\n    </BriefContainer>\n  )\n}\n","import styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { GlobalSection } from '../../styles/components/global'\n\nexport const PostSection = styled(GlobalSection)``\n\nexport const PostLink = styled(Link)`\n  display: grid;\n  grid-template-columns: 1fr 100px;\n  gap: 1.5rem;\n  padding: 0;\n  margin: 1.6rem 0;\n  background: transparent;\n  text-decoration: none;\n\n  &:hover {\n    color: rgb(${(props) => props.theme.gray10});\n    text-decoration: underline;\n  }\n`\n\nexport const PostTime = styled.time`\n  display: block;\n  margin-left: auto;\n  font-family: ${(props) => props.theme.fontFamilyMonospace};\n  color: rgb(${(props) => props.theme.gray6});\n  font-size: 0.8rem;\n  font-weight: 500;\n`\nexport const PostH5 = styled.h5`\n  margin: 0;\n  font-size: 0.9rem;\n  color: rgb(${(props) => props.theme.gray10});\n  font-weight: 500;\n  font-family: ${(props) => props.theme.fontFamilyBase};\n  line-height: 1.3;\n\n  @media screen and (min-width: 700px) {\n    font-size: 1rem;\n    font-weight: 600;\n  }\n`\n\nexport const PostYear = styled.h2`\n  color: rgb(${(props) => props.theme.purple6});\n  padding-bottom: 0.8rem;\n  border-bottom-width: 2px;\n`\n","import React, { useMemo } from 'react'\nimport { SimplifiedData, YearListData } from '../../typings/pages'\n\nimport { PostH5, PostLink, PostSection, PostTime, PostYear } from './style'\n\n/**\n * @description 文章列表\n */\n\nexport const Posts = ({ data = [], prefix }: { data: SimplifiedData[]; prefix?: string }) => {\n  const postsByYear = useMemo(() => {\n    const collection: YearListData = {}\n\n    data.forEach((post) => {\n      const year = post.date?.split(', ')[1]\n\n      collection[year] = [...(collection[year] || []), post]\n    })\n\n    return collection\n  }, [data])\n\n  const years = useMemo(() => Object.keys(postsByYear).reverse(), [postsByYear])\n\n  return (\n    <>\n      {years.map((year) => (\n        <PostSection key={year}>\n          <PostYear>{year}</PostYear>\n          <div>\n            {postsByYear[year].map((node: SimplifiedData) => (\n              <PostLink to={prefix ? `/${prefix}${node.slug}` : node.slug} key={node.id}>\n                <PostH5>{node.title}</PostH5>\n                <PostTime>{node.date.replace(/,\\s\\d{4}/, '')}</PostTime>\n              </PostLink>\n            ))}\n          </div>\n        </PostSection>\n      ))}\n    </>\n  )\n}\n","import React from 'react'\r\nimport { SideCard, SideLink, SideSticky, SideTag, SideTags, SideTitle, SlidLinkCount } from './style'\r\n\r\nimport { useGetTaxonomies } from '../../hooks/useGetTaxonomies'\r\nimport { slugify } from '../../utils/helpers'\r\n\r\n/**\r\n * @description 归档页面 - 侧边类别、标签信息\r\n */\r\n\r\nexport const BlogSidebar = () => {\r\n  const data = useGetTaxonomies()\r\n  const categories = data.categories.group\r\n  const tags = data.tags.group\r\n\r\n  return (\r\n    <>\r\n      <aside>\r\n        <SideSticky>\r\n          <SideCard>\r\n            <SideTitle>类别</SideTitle>\r\n            {categories\r\n              .filter((category) => category.name !== 'Highlight')\r\n              .map((category) => {\r\n                return (\r\n                  <SideLink key={category.name} to={`/categories/${slugify(category.name)}`} activeClassName=\"active\">\r\n                    <span>{category.name}</span>\r\n                    <SlidLinkCount>{category.totalCount}</SlidLinkCount>\r\n                  </SideLink>\r\n                )\r\n              })}\r\n          </SideCard>\r\n\r\n          <SideCard>\r\n            <SideTitle>标签</SideTitle>\r\n            <SideTags>\r\n              {tags.map((tag) => {\r\n                return (\r\n                  <SideTag key={tag.name} to={`/tags/${slugify(tag.name)}`} activeClassName=\"active\">\r\n                    {tag.name}\r\n                  </SideTag>\r\n                )\r\n              })}\r\n            </SideTags>\r\n          </SideCard>\r\n        </SideSticky>\r\n      </aside>\r\n    </>\r\n  )\r\n}\r\n","import { graphql, useStaticQuery } from 'gatsby'\nimport { TaxonomyQueryQuery } from '../../gatsby-graphql'\n\nexport const useGetTaxonomies = (): TaxonomyQueryQuery => {\n  const data = useStaticQuery(graphql`\n    query TaxonomyQuery {\n      tags: allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          name: fieldValue\n          totalCount\n        }\n      }\n\n      categories: allMarkdownRemark {\n        group(field: frontmatter___categories) {\n          name: fieldValue\n          totalCount\n        }\n      }\n    }\n  `)\n\n  return data\n}\n"],"names":["BriefContainer","BriefSubTitle","props","theme","gray8","BriefTitle","gray10","BriefPurpleTitle","purple5","BriefHeader","highlight","subTitle","title","children","index","___EmotionJSX","className","PostSection","_styled","GlobalSection","PostLink","Link","PostTime","fontFamilyMonospace","gray6","PostH5","fontFamilyBase","PostYear","purple6","Posts","data","prefix","postsByYear","useMemo","collection","forEach","post","year","date","_post$date","split","years","Object","keys","reverse","map","key","node","to","slug","id","replace","BlogSidebar","useStaticQuery","categories","group","tags","SideSticky","SideCard","SideTitle","filter","category","name","SideLink","slugify","activeClassName","SlidLinkCount","totalCount","SideTags","tag","SideTag"],"sourceRoot":""}