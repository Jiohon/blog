{"version":3,"file":"component---src-templates-me-tsx-05aec28c39a3ce14782e.js","mappings":"uVAKaA,EAAaC,EAAAA,QAAAA,IAAAA,OAAiB,SAACC,GAAsB,MAAM,CACtEC,KAAQD,EAAMC,KAAO,GAAC,MACvB,IAAE,uEAFuBF,CAEvB,8BAEM,SAACC,GAAK,OAAKA,EAAMC,GAAG,IAGhBC,GAAWH,EAAAA,EAAAA,SAAOI,EAAAA,IAAW,qEAAlBJ,CAAkB,oBAI7BK,EAAYL,EAAAA,QAAAA,GAAAA,WAAS,2DAATA,CAAS,iHACvB,SAACC,GAAK,OAAKA,EAAMK,MAAMC,cAAc,IAQnCC,GAAWR,EAAAA,EAAAA,SAAOS,EAAAA,MAAK,qEAAZT,CAAY,+XAMjB,SAACC,GAAK,OAAKA,EAAMK,MAAMI,YAAY,IAC3C,SAACT,GAAK,OAAKA,EAAMK,MAAMK,aAAa,IAW7B,SAACV,GAAK,OAAKA,EAAMK,MAAMM,cAAc,IAQrC,SAACX,GAAK,OAAKA,EAAMK,MAAMM,cAAc,IAS1CC,EAAgBb,EAAAA,QAAAA,IAAAA,WAAU,+DAAVA,CAAU,iEAG5B,SAACC,GAAK,OAAKA,EAAMK,MAAMC,cAAc,IAC/B,SAACN,GAAK,OAAKA,EAAMK,MAAMQ,mBAAmB,IAG9CC,EAAWf,EAAAA,QAAAA,IAAAA,WAAU,0DAAVA,CAAU,yEAMrBgB,GAAUhB,EAAAA,EAAAA,SAAOS,EAAAA,MAAK,oEAAZT,CAAY,6ZAKb,SAACC,GAAK,OAAKA,EAAMK,MAAMW,WAAW,IACrC,SAAChB,GAAK,OAAKA,EAAMK,MAAMI,YAAY,IAC3C,SAACT,GAAK,OAAKA,EAAMK,MAAMK,aAAa,IAC/B,SAACV,GAAK,OAAKA,EAAMK,MAAMY,qBAAqB,IAO1C,SAACjB,GAAK,OAAKA,EAAMK,MAAMM,cAAc,IACnC,SAACX,GAAK,OAAKA,EAAMK,MAAMM,cAAc,IAM5C,SAACX,GAAK,OAAKA,EAAMK,MAAMa,eAAe,IAC/B,SAAClB,GAAK,OAAKA,EAAMK,MAAMc,gBAAgB,IAK9CC,GAAgBrB,EAAAA,EAAAA,SAAOsB,EAAAA,GAAY,0EAAnBtB,CAAmB,0F,gHC9FnCuB,EAAY,WACvB,OACEC,EAAAA,cAAAA,QAAAA,KACEA,EAAAA,cAACzB,EAAAA,GAAU,KACTyB,EAAAA,cAACrB,EAAAA,GAAQ,CAACsB,UAAU,qBAClBD,EAAAA,cAACnB,EAAAA,GAAS,aAKpB,E,4BCCe,SAASqB,EAAW,GAAoC,IAC/DC,EADiC,EAAJC,KACjBC,eACVC,EAAR,iBAAuBH,EAAKI,aAApBD,MAER,OACEN,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACQ,EAAAA,EAAM,CAACF,MAAUA,EAAK,MAAMG,EAAAA,EAAAA,YAC7BT,EAAAA,cAACU,EAAAA,EAAG,MACJV,EAAAA,cAACW,EAAAA,GAAe,KACdX,EAAAA,cAACY,EAAAA,GAAY,KACXZ,EAAAA,cAACa,EAAAA,GAAe,KACdb,EAAAA,cAACc,EAAAA,GAAc,KAAER,GACjBN,EAAAA,cAACe,EAAAA,GAAe,KACdf,EAAAA,cAAAA,MAAAA,CAAKgB,wBAAyB,CAAEC,OAAQd,EAAKe,UAIjDlB,EAAAA,cAACD,EAAS,QAKpB,C","sources":["webpack://hushes/./src/components/Sidebar/style.ts","webpack://hushes/./src/components/Sidebar/MeSidebar.tsx","webpack://hushes/./src/templates/me.tsx"],"sourcesContent":["import { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport styled from 'styled-components'\nimport { GlobalCard } from '../../styles/components/global'\n\nexport const SideSticky = styled.div.attrs((props: { top: number }) => ({\n  top: `${props.top || 8}rem`,\n}))`\n  position: sticky;\n  top: ${(props) => props.top};\n`\n\nexport const SideCard = styled(GlobalCard)`\n  margin: 2rem 0;\n`\n\nexport const SideTitle = styled.h2`\n  color: ${(props) => props.theme.fontColorMuted};\n  font-size: 0.9rem;\n  border: none;\n  margin: 0 0 1rem !important;\n  text-transform: uppercase;\n  font-weight: 700;\n`\n\nexport const SideLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-decoration: none;\n  background-color: transparent;\n  border-radius: ${(props) => props.theme.borderRadius};\n  color: ${(props) => props.theme.fontColorBase};\n  font-size: 0.9rem;\n  font-weight: 600;\n  margin-bottom: 0.6rem;\n  padding: 0.1rem 0.3rem;\n\n  &:last-child {\n    margin-bottom: 0rem;\n  }\n\n  &.active {\n    background: ${(props) => props.theme.highlightColor};\n    color: white;\n    div {\n      color: white;\n    }\n  }\n\n  &:hover {\n    background: ${(props) => props.theme.highlightColor};\n    color: white;\n    text-decoration: none;\n    div {\n      color: white;\n    }\n  }\n`\n\nexport const SlidLinkCount = styled.div`\n  font-weight: 400;\n  font-size: 0.8rem;\n  color: ${(props) => props.theme.fontColorMuted};\n  font-family: ${(props) => props.theme.fontFamilyMonospace};\n`\n\nexport const SideTags = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 0.8rem 0.6rem;\n`\n\nexport const SideTag = styled(Link)`\n  line-height: 22px;\n  font-size: 0.75rem;\n  font-weight: 400;\n  padding: 0rem 0.5rem 0.05rem 0.5rem;\n  border: 1px solid ${(props) => props.theme.borderColor};\n  border-radius: ${(props) => props.theme.borderRadius};\n  color: ${(props) => props.theme.fontColorBase};\n  background: ${(props) => props.theme.buttonBackgroundColor} !important;\n  text-decoration: none;\n  text-transform: capitalize;\n  display: inline-block;\n  text-align: center;\n\n  &.active {\n    background: ${(props) => props.theme.highlightColor} !important;\n    border-color: ${(props) => props.theme.highlightColor} !important;\n    color: white !important;\n    font-weight: 600;\n  }\n\n  &:hover {\n    color: ${(props) => props.theme.fontColorBright};\n    border-color: ${(props) => props.theme.borderColorHover};\n    text-decoration: none;\n  }\n`\n\nexport const PostSideImage = styled(GatsbyImage)`\n  margin: 0 auto;\n  margin-top: 2rem;\n  text-align: center;\n  display: block !important;\n  width: 100px;\n`\n","import React from 'react'\nimport { SideCard, SideSticky, SideTitle } from './style'\n\n/**\n * @description Me页面 - 侧边个人介绍\n */\n\nexport const MeSidebar = () => {\n  return (\n    <aside>\n      <SideSticky>\n        <SideCard className=\"post-sidebar-card\">\n          <SideTitle>Me</SideTitle>\n        </SideCard>\n      </SideSticky>\n    </aside>\n  )\n}\n","import { graphql, PageProps } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport { MeBySlugQuery } from '../../gatsby-graphql'\n\nimport { SEO } from '../components/SEO'\nimport { MeSidebar } from '../components/Sidebar/MeSidebar'\nimport { GlobalContainer } from '../styles/components/global'\nimport { TemplateContent, TemplateGrid, TemplateHeader, TemplateSection } from '../styles/components/templates'\nimport config from '../utils/config'\n\n/**\n * @description 个人介绍页面\n * @date 23/10/2022\n * @export\n * @param {PageProps<MeBySlugQuery>} { data }\n * @return {*}\n */\nexport default function MeTemplate({ data }: PageProps<MeBySlugQuery>) {\n  const post = data.markdownRemark!\n  const { title } = { ...post.frontmatter }\n\n  return (\n    <>\n      <Helmet title={`${title} | ${config.siteTitle}`} />\n      <SEO />\n      <GlobalContainer>\n        <TemplateGrid>\n          <TemplateContent>\n            <TemplateHeader>{title}</TemplateHeader>\n            <TemplateSection>\n              <div dangerouslySetInnerHTML={{ __html: post.html as string }} />\n            </TemplateSection>\n          </TemplateContent>\n\n          <MeSidebar />\n        </TemplateGrid>\n      </GlobalContainer>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query MeBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        slug\n      }\n    }\n  }\n`\n"],"names":["SideSticky","styled","props","top","SideCard","GlobalCard","SideTitle","theme","fontColorMuted","SideLink","Link","borderRadius","fontColorBase","highlightColor","SlidLinkCount","fontFamilyMonospace","SideTags","SideTag","borderColor","buttonBackgroundColor","fontColorBright","borderColorHover","PostSideImage","GatsbyImage","MeSidebar","React","className","MeTemplate","post","data","markdownRemark","title","frontmatter","Helmet","config","SEO","GlobalContainer","TemplateGrid","TemplateContent","TemplateHeader","TemplateSection","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}