{"version":3,"file":"component---src-templates-post-tsx-892eb7bca3aa1ea237eb.js","mappings":"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","sources":["webpack://hushes/./src/components/Sidebar/style.ts","webpack://hushes/./src/components/Sidebar/PostSidebar.tsx","webpack://hushes/./src/templates/post.tsx"],"sourcesContent":["import { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport styled from 'styled-components'\nimport { GlobalCard } from '../../styles/components/global'\n\nexport const SideSticky = styled.div.attrs((props: { top: number }) => ({\n  top: `${props.top || 8}rem`,\n}))`\n  position: sticky;\n  top: ${(props) => props.top};\n`\n\nexport const SideCard = styled(GlobalCard)`\n  margin: 2rem 0;\n`\n\nexport const SideTitle = styled.h2`\n  color: ${(props) => props.theme.fontColorMuted};\n  font-size: 0.9rem;\n  border: none;\n  margin: 0 0 1rem !important;\n  text-transform: uppercase;\n  font-weight: 700;\n`\n\nexport const SideLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-decoration: none;\n  background-color: transparent;\n  border-radius: ${(props) => props.theme.borderRadius};\n  color: ${(props) => props.theme.fontColorBase};\n  font-size: 0.9rem;\n  font-weight: 600;\n  margin-bottom: 0.6rem;\n  padding: 0.1rem 0.3rem;\n\n  &:last-child {\n    margin-bottom: 0rem;\n  }\n\n  &.active {\n    background: ${(props) => props.theme.highlightColor};\n    color: white;\n    div {\n      color: white;\n    }\n  }\n\n  &:hover {\n    background: ${(props) => props.theme.highlightColor};\n    color: white;\n    text-decoration: none;\n    div {\n      color: white;\n    }\n  }\n`\n\nexport const SlidLinkCount = styled.div`\n  font-weight: 400;\n  font-size: 0.8rem;\n  color: ${(props) => props.theme.fontColorMuted};\n  font-family: ${(props) => props.theme.fontFamilyMonospace};\n`\n\nexport const SideTags = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 0.8rem 0.6rem;\n`\n\nexport const SideTag = styled(Link)`\n  line-height: 22px;\n  font-size: 0.75rem;\n  font-weight: 400;\n  padding: 0rem 0.5rem 0.05rem 0.5rem;\n  border: 1px solid ${(props) => props.theme.borderColor};\n  border-radius: ${(props) => props.theme.borderRadius};\n  color: ${(props) => props.theme.fontColorBase};\n  background: ${(props) => props.theme.buttonBackgroundColor} !important;\n  text-decoration: none;\n  text-transform: capitalize;\n  display: inline-block;\n  text-align: center;\n\n  &.active {\n    background: ${(props) => props.theme.highlightColor} !important;\n    border-color: ${(props) => props.theme.highlightColor} !important;\n    color: white !important;\n    font-weight: 600;\n  }\n\n  &:hover {\n    color: ${(props) => props.theme.fontColorBright};\n    border-color: ${(props) => props.theme.borderColorHover};\n    text-decoration: none;\n  }\n`\n\nexport const PostSideImage = styled(GatsbyImage)`\n  margin: 0 auto;\n  margin-top: 2rem;\n  text-align: center;\n  display: block !important;\n  width: 100px;\n`\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport { PostSideImage, SideCard, SideSticky, SideTag, SideTags, SideTitle } from './style'\n\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport { FileFilterInput } from '../../../gatsby-graphql'\nimport { slugify } from '../../utils/helpers'\n\n/**\n * @description ‰æßËæπÊñáÁ´†ËØ¶ÁªÜ‰ø°ÊÅØ\n */\n\nexport const PostSidebar = ({\n  tags = [],\n  date,\n  categories = [],\n  thumbnail,\n}: {\n  date: string\n  tags?: (string | null)[] | null\n  categories?: (string | null)[] | null\n  thumbnail?: FileFilterInput | null\n}) => {\n  const category = categories?.filter((category) => category !== 'Highlight')\n  const { gatsbyImageData } = { ...thumbnail?.childImageSharp }\n\n  return (\n    <aside>\n      <SideSticky>\n        {thumbnail && <PostSideImage image={gatsbyImageData as IGatsbyImageData} alt=\"\" />}\n        {/* <SideCard>\n        <h2>About me</h2>\n        <img alt=\"Tania\" className=\"sidebar-avatar\" />\n        <p>\n          Hello and thanks for visiting! My name is <Link to=\"/me\">Hush</Link>,\n          and this is my website and digital garden. üå±\n        </p>\n        <p>\n          I'm a software developer who writes articles and tutorials about\n          things that interest me. This site is and has always been free of ads,\n          trackers, social media, affiliates, and sponsored posts.\n        </p>\n        <p>I hope you enjoy the post and have a nice day.</p>\n      </SideCard> */}\n        <SideCard>\n          <SideTitle>Êó•Êúü</SideTitle>\n          <ul>\n            <li>ÂèëÂ∏É‰∫é {date}</li>\n          </ul>\n\n          {category && (\n            <div>\n              <SideTitle>Á±ªÂà´</SideTitle>\n              <ul>\n                <li>\n                  <Link to={`/categories/${slugify(category!)}`}>{category}</Link>\n                </li>\n              </ul>\n            </div>\n          )}\n\n          <SideTitle>Ê†áÁ≠æ</SideTitle>\n          <SideTags>\n            {tags &&\n              tags.map((tag) => {\n                return (\n                  <SideTag key={tag} to={`/tags/${slugify(tag!)}`} activeClassName=\"active\">\n                    {tag}\n                  </SideTag>\n                )\n              })}\n          </SideTags>\n        </SideCard>\n      </SideSticky>\n    </aside>\n  )\n}\n","import { graphql, PageProps } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport { PostBySlugQuery } from '../../gatsby-graphql'\n\nimport { SEO } from '../components/SEO'\nimport { PostSidebar } from '../components/Sidebar/PostSidebar'\nimport { Layout } from '../layout/index'\nimport { GlobalContainer } from '../styles/components/global'\nimport { TemplateContent, TemplateGrid, TemplateHeader, TemplateSection } from '../styles/components/templates'\nimport config from '../utils/config'\n\n/**\n * @description ÊñáÁ´†È°µÈù¢\n * @date 23/10/2022\n * @export\n * @param {PageProps<PostBySlugQuery>} { data }\n * @return {*}\n */\nexport default function PostTemplate({ data }: PageProps<PostBySlugQuery>) {\n  const post = data.markdownRemark!\n  const { tags, categories, title, date, thumbnail } = { ...post?.frontmatter }\n  const { slug } = { ...post?.fields }\n\n  return (\n    <>\n      <Helmet title={`${title} | ${config.siteTitle}`} />\n      <SEO postPath={slug} postNode={post} postSEO />\n      <GlobalContainer>\n        <TemplateGrid>\n          <TemplateContent>\n            <TemplateHeader>{title}</TemplateHeader>\n            <TemplateSection>\n              <div id={slug as string} dangerouslySetInnerHTML={{ __html: post?.html as string }} />\n            </TemplateSection>\n          </TemplateContent>\n\n          <PostSidebar date={date} tags={tags} categories={categories} thumbnail={thumbnail} />\n        </TemplateGrid>\n      </GlobalContainer>\n    </>\n  )\n}\n\nPostTemplate.Layout = Layout\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        tags\n        categories\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(width: 100, height: 100)\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["SideSticky","styled","props","top","SideCard","GlobalCard","SideTitle","theme","fontColorMuted","SideLink","Link","borderRadius","fontColorBase","highlightColor","SlidLinkCount","fontFamilyMonospace","SideTags","SideTag","borderColor","buttonBackgroundColor","fontColorBright","borderColorHover","PostSideImage","GatsbyImage","PostSidebar","tags","date","categories","thumbnail","category","filter","gatsbyImageData","childImageSharp","React","image","alt","to","slugify","map","tag","key","activeClassName","PostTemplate","post","data","markdownRemark","frontmatter","title","slug","fields","Helmet","config","SEO","postPath","postNode","postSEO","GlobalContainer","TemplateGrid","TemplateContent","TemplateHeader","TemplateSection","id","dangerouslySetInnerHTML","__html","html","Layout"],"sourceRoot":""}