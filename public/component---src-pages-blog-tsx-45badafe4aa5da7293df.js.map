{"version":3,"file":"component---src-pages-blog-tsx-45badafe4aa5da7293df.js","mappings":"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","sources":["webpack://hushes/./src/components/BriefHeader/style.ts","webpack://hushes/./src/components/BriefHeader/index.tsx","webpack://hushes/./src/components/Posts/style.ts","webpack://hushes/./src/components/Posts/index.tsx","webpack://hushes/./src/components/Sidebar/BlogSidebar.tsx","webpack://hushes/./src/hooks/useGetTaxonomies.ts","webpack://hushes/./src/components/Sidebar/style.ts","webpack://hushes/./src/pages/blog.tsx","webpack://hushes/./src/styles/components/pages.ts"],"sourcesContent":["import styled from 'styled-components'\n\nexport const BriefHeader = styled.header`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  padding: 0.5rem 0;\n  position: relative;\n  @media screen and (min-width: 700px) {\n    padding: 2.5rem 0 0.5rem;\n    &.index {\n      padding: 3rem 0 0 0;\n    }\n  }\n`\n\nexport const BriefSubTitle = styled.div`\n  color: ${(props) => props.theme.fontColorMuted};\n  font-weight: 500;\n  font-size: 1rem;\n  margin-bottom: 0.4rem;\n`\n\nexport const BriefTitle = styled.h1`\n  font-size: 1.5rem;\n  line-height: 1.1;\n  font-weight: 700;\n  letter-spacing: -0.06rem;\n  color: ${(props) => props.theme.fontColorHeading};\n  margin: 0 !important;\n\n  @media screen and (min-width: 700px) {\n    font-size: 2rem;\n    letter-spacing: -0.08rem;\n  }\n`\n\nexport const BriefPurpleTitle = styled.span`\n  color: ${(props) => props.theme.highlightColor};\n`\n","import React from 'react'\nimport { BriefHeader as Header, BriefPurpleTitle as PurpleTitle, BriefSubTitle, BriefTitle } from './style'\n\ninterface Props {\n  title?: string | null\n  highlight?: number\n  subTitle?: string\n  children?: React.ReactNode\n  index?: boolean\n}\n\n/**\n * @description 大标题\n */\n\nexport const BriefHeader = ({ highlight, subTitle, title, children, index }: Props) => {\n  return (\n    <Header className={index ? 'index' : ''}>\n      {subTitle && (\n        <BriefSubTitle>\n          {highlight && <PurpleTitle>{highlight}</PurpleTitle>}\n          {subTitle}\n        </BriefSubTitle>\n      )}\n      {title && <BriefTitle>{title}</BriefTitle>}\n      {children && children}\n    </Header>\n  )\n}\n","import { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { GlobalSection } from '../../styles/components/global'\n\nexport const PostSection = styled(GlobalSection)``\n\nexport const PostLink = styled(Link)`\n  display: grid;\n  grid-template-columns: 1fr 100px;\n  gap: 1.5rem;\n  padding: 0;\n  margin: 1.6rem 0;\n  background: transparent;\n  text-decoration: none;\n\n  &:hover {\n    color: ${(props) => props.theme.fontColorBright};\n    text-decoration: underline;\n  }\n`\n\nexport const PostTime = styled.time`\n  display: block;\n  margin-left: auto;\n  font-family: ${(props) => props.theme.fontFamilyMonospace};\n  color: ${(props) => props.theme.postTimeColor};\n  font-size: 0.8rem;\n  font-weight: 500;\n`\nexport const PostH5 = styled.h5`\n  margin: 0;\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.fontColorHeading};\n  font-weight: 500;\n  font-family: ${(props) => props.theme.fontFamilyBase};\n  line-height: 1.3;\n\n  @media screen and (min-width: 700px) {\n    font-size: 1rem;\n    font-weight: 600;\n  }\n`\n\nexport const PostYear = styled.h2`\n  color: ${(props) => props.theme.year};\n  padding-bottom: 0.8rem;\n`\n","import React, { useMemo } from 'react'\nimport { SimplifiedData, YearListData } from '../../typings/pages'\n\nimport { PostH5, PostLink, PostSection, PostTime, PostYear } from './style'\n\n/**\n * @description 文章列表\n */\n\nexport const Posts = ({ data = [], prefix }: { data: SimplifiedData[]; prefix?: string }) => {\n  const postsByYear = useMemo(() => {\n    const collection: YearListData = {}\n\n    data.forEach((post) => {\n      const year = post.date?.split(', ')[1]\n\n      collection[year] = [...(collection[year] || []), post]\n    })\n\n    return collection\n  }, [data])\n\n  const years = useMemo(() => Object.keys(postsByYear).reverse(), [postsByYear])\n\n  return (\n    <>\n      {years.map((year) => (\n        <PostSection key={year}>\n          <PostYear>{year}</PostYear>\n          <div>\n            {postsByYear[year].map((node: SimplifiedData) => (\n              <PostLink to={prefix ? `/${prefix}${node.slug}` : node.slug} key={node.id}>\n                <PostH5>{node.title}</PostH5>\n                <PostTime>{node.date.replace(/,\\s\\d{4}/, '')}</PostTime>\n              </PostLink>\n            ))}\n          </div>\n        </PostSection>\n      ))}\n    </>\n  )\n}\n","import React from 'react'\r\nimport { SideCard, SideLink, SideSticky, SideTag, SideTags, SideTitle, SlidLinkCount } from './style'\r\n\r\nimport { useGetTaxonomies } from '../../hooks/useGetTaxonomies'\r\nimport { slugify } from '../../utils/helpers'\r\n\r\n/**\r\n * @description 归档页面 - 侧边类别、标签信息\r\n */\r\n\r\nexport const BlogSidebar = () => {\r\n  const data = useGetTaxonomies()\r\n  const categories = data.categories.group\r\n  const tags = data.tags.group\r\n\r\n  return (\r\n    <>\r\n      <aside>\r\n        <SideSticky>\r\n          <SideCard>\r\n            <SideTitle>类别</SideTitle>\r\n            {categories\r\n              .filter((category) => category.name !== 'Highlight')\r\n              .map((category) => {\r\n                return (\r\n                  <SideLink key={category.name} to={`/categories/${slugify(category.name)}`} activeClassName=\"active\">\r\n                    <span>{category.name}</span>\r\n                    <SlidLinkCount>{category.totalCount}</SlidLinkCount>\r\n                  </SideLink>\r\n                )\r\n              })}\r\n          </SideCard>\r\n\r\n          <SideCard>\r\n            <SideTitle>标签</SideTitle>\r\n            <SideTags>\r\n              {tags.map((tag) => {\r\n                return (\r\n                  <SideTag key={tag.name} to={`/tags/${slugify(tag.name)}`} activeClassName=\"active\">\r\n                    {tag.name}\r\n                  </SideTag>\r\n                )\r\n              })}\r\n            </SideTags>\r\n          </SideCard>\r\n        </SideSticky>\r\n      </aside>\r\n    </>\r\n  )\r\n}\r\n","import { graphql, useStaticQuery } from 'gatsby'\nimport { TaxonomyQueryQuery } from '../../gatsby-graphql'\n\nexport const useGetTaxonomies = (): TaxonomyQueryQuery => {\n  const data = useStaticQuery(graphql`\n    query TaxonomyQuery {\n      tags: allMarkdownRemark {\n        group(field: frontmatter___tags) {\n          name: fieldValue\n          totalCount\n        }\n      }\n\n      categories: allMarkdownRemark {\n        group(field: frontmatter___categories) {\n          name: fieldValue\n          totalCount\n        }\n      }\n    }\n  `)\n\n  return data\n}\n","import { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport styled from 'styled-components'\nimport { GlobalCard } from '../../styles/components/global'\n\nexport const SideSticky = styled.div.attrs((props: { top: number }) => ({\n  top: `${props.top || 8}rem`,\n}))`\n  position: sticky;\n  top: ${(props) => props.top};\n`\n\nexport const SideCard = styled(GlobalCard)`\n  margin: 2rem 0;\n`\n\nexport const SideTitle = styled.h2`\n  color: ${(props) => props.theme.fontColorMuted};\n  font-size: 0.9rem;\n  border: none;\n  margin: 0 0 1rem !important;\n  text-transform: uppercase;\n  font-weight: 700;\n`\n\nexport const SideLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-decoration: none;\n  background-color: transparent;\n  border-radius: ${(props) => props.theme.borderRadius};\n  color: ${(props) => props.theme.fontColorBase};\n  font-size: 0.9rem;\n  font-weight: 600;\n  margin-bottom: 0.6rem;\n  padding: 0.1rem 0.3rem;\n\n  &:last-child {\n    margin-bottom: 0rem;\n  }\n\n  &.active {\n    color: ${(props) => props.theme.highlightColor};\n    div {\n      color: inherit;\n    }\n  }\n\n  &:hover {\n    color: ${(props) => props.theme.highlightColor};\n    text-decoration: none;\n    div {\n      color: inherit;\n    }\n  }\n`\n\nexport const SlidLinkCount = styled.div`\n  font-weight: 400;\n  font-size: 0.8rem;\n  color: ${(props) => props.theme.fontColorMuted};\n  font-family: ${(props) => props.theme.fontFamilyMonospace};\n`\n\nexport const SideTags = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 0.8rem 0.6rem;\n`\n\nexport const SideTag = styled(Link)`\n  line-height: 22px;\n  font-size: 0.75rem;\n  font-weight: 400;\n  padding: 0rem 0.5rem 0.05rem 0.5rem;\n  border: 1px solid ${(props) => props.theme.borderColor};\n  border-radius: ${(props) => props.theme.borderRadius};\n  color: ${(props) => props.theme.fontColorBase};\n  text-decoration: none;\n  text-transform: capitalize;\n  display: inline-block;\n  text-align: center;\n\n  &.active {\n    color: ${(props) => props.theme.highlightColor};\n    border-color: rgba(81, 182, 129, 0.3);\n    background-color: rgba(81, 182, 129, 0.18);\n  }\n\n  &:hover {\n    color: ${(props) => props.theme.highlightColor};\n    border-color: rgba(81, 182, 129, 0.3);\n    background-color: rgba(81, 182, 129, 0.15);\n    text-decoration: none;\n  }\n`\n\nexport const PostSideImage = styled(GatsbyImage)`\n  margin: 0 auto;\n  margin-top: 2rem;\n  text-align: center;\n  display: block !important;\n  width: 100px;\n`\n\nexport const Anchor = styled.li`\n  margin-bottom: 0.65rem;\n  color: ${(props) => props.theme.link};\n  cursor: pointer;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`\n","import { graphql, PageProps } from 'gatsby'\nimport React, { useMemo } from 'react'\nimport Helmet from 'react-helmet'\nimport { BlogQueryQuery } from '../../gatsby-graphql'\n\nimport { BriefHeader } from '../components/BriefHeader'\nimport { Posts } from '../components/Posts'\nimport { SEO } from '../components/SEO'\nimport { BlogSidebar } from '../components/Sidebar/BlogSidebar'\nimport { Layout } from '../layout/index'\nimport { GlobalContainer } from '../styles/components/global'\nimport { BlogContent, BlogGrid } from '../styles/components/pages'\nimport config from '../utils/config'\nimport { getSimplifiedPosts } from '../utils/helpers'\n\n/**\n * @description 归档页面\n * @date 23/10/2022\n * @export\n * @param {PageProps<BlogQueryQuery>} { data }\n * @return {*}\n */\nexport default function Blog({ data }: PageProps<BlogQueryQuery>) {\n  const posts = data.posts.edges\n  const simplifiedPosts = useMemo(() => getSimplifiedPosts(posts), [posts])\n  const title = '文章归档'\n  const description = 'Notes & tutorials'\n  return (\n    <>\n      <Helmet title={`${title} | ${config.siteTitle}`} />\n      <SEO customDescription={description} />\n\n      <GlobalContainer as=\"header\">\n        <BlogGrid>\n          <BlogContent>\n            <BriefHeader title={title} />\n            <Posts data={simplifiedPosts} />\n          </BlogContent>\n          <BlogSidebar />\n        </BlogGrid>\n      </GlobalContainer>\n    </>\n  )\n}\n\nBlog.Layout = Layout\n\nexport const blogQuery = graphql`\n  query BlogQuery {\n    posts: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            categories\n          }\n        }\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { GlobalCard, GlobalContainer } from './global'\nimport { TemplateContent, TemplateGrid, TemplateSection } from './templates'\n\nexport const BlogGrid = styled(TemplateGrid)``\n\nexport const BlogContent = styled(TemplateContent)``\n\nexport const IndexSection = styled(TemplateSection)``\n\nexport const BriefWrapper = styled.div`\n  display: block;\n\n  @media screen and (min-width: 700px) {\n    display: flex;\n    align-items: center;\n    gap: 3rem;\n  }\n`\n\nexport const BriefDescription = styled.p`\n  -webkit-font-smoothing: antialiased;\n  margin-top: 3rem;\n  margin-bottom: 0;\n  font-size: 1.1rem;\n  line-height: 1.4;\n  color: ${(props) => props.theme.fontColorBase};\n  font-weight: 500;\n`\n\n\nconst Preview = styled.div`\n  display: grid;\n  gap: 1.9rem;\n\n  @media screen and (min-width: 700px) {\n    grid-template-columns: repeat(2, 1fr);\n    gap: 2.4rem;\n  }\n\n  @media screen and (min-width: 1060px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`\n\nexport const RecentPreview = styled(Preview)``\n\nexport const RecentCard = styled(GlobalCard)`\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n  min-height: 9rem;\n`\n\nexport const HighlightPreview = styled(Preview)``\n\nexport const HighlightCard = styled(GlobalCard)`\n  background: transparent;\n  padding: 1.5rem;\n  /* border: 2px solid ${(props) => props.theme.borderColor}; */\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`\n\nexport const Time = styled.time`\n  display: block;\n  font-family: ${(props) => props.theme.fontFamilyMonospace};\n  color: ${(props) => props.theme.fontColorBright};\n  font-size: 0.8rem;\n\n  &.recent {\n    color: ${(props) => props.theme.cardTimeColor};\n  }\n`\n\nexport const TitleLink = styled(Link)`\n  display: block;\n  width: 100%;\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-family: ${(props) => props.theme.fontFamilyBase};\n  color: ${(props) => props.theme.fontColorHeading};\n  font-weight: 700;\n  margin: 0.25rem 0 0.5rem;\n  padding: 0;\n  border: 0;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n    color: ${(props) => props.theme.fontColorBright};\n  }\n`\n\nexport const TagLinks = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const TagLink = styled(Link)`\n  font-family: ${(props) => props.theme.fontFamilyMonospace};\n  font-size: 0.8rem;\n  color: ${(props) => props.theme.fontColorMuted};\n  text-decoration: underline;\n`\n\nexport const SunsetContainer = styled(GlobalContainer)`\n  padding-top: 3rem;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 2.2rem;\n\n  @media screen and (max-width: 1000px) {\n    padding-top: 2rem;\n    gap: 1.5rem;\n  }\n  @media screen and (max-width: 480px) {\n    padding-top: 1rem;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 0.8rem;\n  }\n`\n"],"names":["BriefHeader","styled","BriefSubTitle","props","theme","fontColorMuted","BriefTitle","fontColorHeading","BriefPurpleTitle","highlightColor","highlight","subTitle","title","children","index","React","Header","className","PurpleTitle","PostSection","GlobalSection","PostLink","Link","fontColorBright","PostTime","fontFamilyMonospace","postTimeColor","PostH5","fontFamilyBase","PostYear","year","Posts","data","prefix","postsByYear","useMemo","collection","forEach","post","date","_post$date","split","years","Object","keys","reverse","map","key","node","to","slug","id","replace","BlogSidebar","useStaticQuery","categories","group","tags","SideSticky","SideCard","SideTitle","filter","category","name","SideLink","slugify","activeClassName","SlidLinkCount","totalCount","SideTags","tag","SideTag","top","displayName","componentId","GlobalCard","borderRadius","fontColorBase","borderColor","PostSideImage","GatsbyImage","Anchor","link","Blog","posts","edges","simplifiedPosts","getSimplifiedPosts","Helmet","config","SEO","customDescription","GlobalContainer","as","BlogGrid","BlogContent","Layout","TemplateGrid","TemplateContent","IndexSection","TemplateSection","BriefWrapper","BriefDescription","Preview","RecentPreview","RecentCard","HighlightPreview","HighlightCard","Time","cardTimeColor","TitleLink","TagLinks","TagLink","SunsetContainer"],"sourceRoot":""}