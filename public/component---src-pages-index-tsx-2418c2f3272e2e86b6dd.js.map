{"version":3,"file":"component---src-pages-index-tsx-2418c2f3272e2e86b6dd.js","mappings":"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","sources":["webpack://hushes/./src/components/BriefHeader/style.ts","webpack://hushes/./src/components/BriefHeader/index.tsx","webpack://hushes/./src/components/Heading/style.ts","webpack://hushes/./src/components/Heading/index.tsx","webpack://hushes/./src/pages/index.tsx","webpack://hushes/./src/styles/components/pages.ts"],"sourcesContent":["import styled from 'styled-components'\n\nexport const BriefHeader = styled.header`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  padding: 0.5rem 0;\n  position: relative;\n  @media screen and (min-width: 700px) {\n    padding: 2.5rem 0 0.5rem;\n    &.index {\n      padding: 3rem 0 0 0;\n    }\n  }\n`\n\nexport const BriefSubTitle = styled.div`\n  color: ${(props) => props.theme.fontColorMuted};\n  font-weight: 500;\n  font-size: 1rem;\n  margin-bottom: 0.4rem;\n`\n\nexport const BriefTitle = styled.h1`\n  font-size: 1.5rem;\n  line-height: 1.1;\n  font-weight: 700;\n  letter-spacing: -0.06rem;\n  color: ${(props) => props.theme.fontColorHeading};\n  margin: 0 !important;\n\n  @media screen and (min-width: 700px) {\n    font-size: 2rem;\n    letter-spacing: -0.08rem;\n  }\n`\n\nexport const BriefPurpleTitle = styled.span`\n  color: ${(props) => props.theme.highlightColor};\n`\n","import React from 'react'\nimport { BriefHeader as Header, BriefPurpleTitle as PurpleTitle, BriefSubTitle, BriefTitle } from './style'\n\ninterface Props {\n  title?: string | null\n  highlight?: number\n  subTitle?: string\n  children?: React.ReactNode\n  index?: boolean\n}\n\n/**\n * @description 大标题\n */\n\nexport const BriefHeader = ({ highlight, subTitle, title, children, index }: Props) => {\n  return (\n    <Header className={index ? 'index' : ''}>\n      {subTitle && (\n        <BriefSubTitle>\n          {highlight && <PurpleTitle>{highlight}</PurpleTitle>}\n          {subTitle}\n        </BriefSubTitle>\n      )}\n      {title && <BriefTitle>{title}</BriefTitle>}\n      {children && children}\n    </Header>\n  )\n}\n","import { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nexport const HeadingContainer = styled.h2`\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 0;\n  padding: 0;\n`\n\nexport const HeadingTitle = styled.div`\n  font-size: 1.4rem;\n  margin-bottom: 0.75rem;\n  font-family: ${(props) => props.theme.fontFamilyBase};\n  font-weight: 700;\n  letter-spacing: -0.03rem;\n  @media screen and (min-width: 700px) {\n    font-size: 1.6rem;\n  }\n`\n\nexport const HeadingLink = styled(Link)`\n  -webkit-appearance: none;\n  background: ${(props) => props.theme.buttonBackgroundColor};\n  display: inline-flex;\n  align-items: center;\n  padding: 0.6rem 1rem;\n  font-family: ${(props) => props.theme.fontFamilyBase};\n  line-height: 1;\n  border-radius: ${(props) => props.theme.borderRadius};\n  font-size: 0.9rem;\n  cursor: pointer;\n  font-weight: 500;\n  color: ${(props) => props.theme.fontColorBase};\n  border: 1px solid ${(props) => props.theme.borderColor};\n  gap: 0.25rem;\n\n  &:hover {\n    color: ${(props) => props.theme.fontColorBright};\n    border-color: ${(props) => props.theme.borderColorHover};\n  }\n`\n","import React from 'react'\nimport { HeadingContainer, HeadingLink, HeadingTitle } from './style'\n\ninterface Props {\n  title: string\n  description?: string\n  slug?: string\n}\n\n/**\n * @description 标题\n */\n\nexport const Heading = ({ title, slug }: Props) => {\n  return (\n    <HeadingContainer>\n      <div>\n        <HeadingTitle>{title}</HeadingTitle>\n      </div>\n      {slug && <HeadingLink to={slug}>View all</HeadingLink>}\n    </HeadingContainer>\n  )\n}\n","import { graphql, PageProps } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport React, { useMemo } from 'react'\nimport Helmet from 'react-helmet'\nimport { GlobalContainer } from '../styles/components/global'\nimport {\n  BriefDescription,\n  BriefWrapper,\n  HighlightCard,\n  HighlightPreview,\n  IndexSection,\n  RecentCard,\n  RecentPreview,\n  TagLink,\n  TagLinks,\n  Time,\n  TitleLink,\n} from '../styles/components/pages'\n\nimport { IndexQueryQuery } from '../../gatsby-graphql'\nimport { BriefHeader } from '../components/BriefHeader'\nimport { Heading } from '../components/Heading'\nimport { SEO } from '../components/SEO'\nimport { Layout } from '../layout/index'\nimport config from '../utils/config'\nimport { getSimplifiedPosts, slugify } from '../utils/helpers'\n\n/**\n * @description 首页\n * @date 23/10/2022\n * @export\n * @param {PageProps<IndexQueryQuery>} { data }\n * @return {*}\n */\nexport default function Index({ data }: PageProps<IndexQueryQuery>) {\n  const latest = data.latest.edges\n  const Highlights = data.Highlights.edges\n  const simplifiedLatest = useMemo(() => getSimplifiedPosts(latest), [latest])\n  const simplifiedHighlights = useMemo(\n    () => getSimplifiedPosts(Highlights, { shortTitle: false, thumbnails: true }),\n    [Highlights]\n  )\n\n  return (\n    <>\n      <Helmet title={config.siteTitle} />\n      <SEO />\n\n      <GlobalContainer>\n        <BriefWrapper>\n          <BriefHeader title=\"Hi, I'm  Hush\" index>\n            <BriefDescription>\n              𝑰 𝒉𝒐𝒑𝒆 𝒚𝒐𝒖 𝒍𝒊𝒗𝒆 𝒂 𝒍𝒊𝒇𝒆 𝒚𝒐𝒖‘𝒓𝒆 𝒑𝒓𝒐𝒖𝒅 𝒐𝒇. 𝑰𝒇 𝒚𝒐𝒖 𝒇𝒊𝒏𝒅 𝒕𝒉𝒂𝒕 𝒚𝒐𝒖’𝒓𝒆 𝒏𝒐𝒕, 𝑰 𝒉𝒐𝒑𝒆 𝒚𝒐𝒖 𝒉𝒂𝒗𝒆 𝒕𝒉𝒆 𝒔𝒕𝒓𝒆𝒏𝒈𝒕𝒉 𝒕𝒐 𝒔𝒕𝒂𝒓𝒕\n              𝒂𝒍𝒍 𝒐𝒗𝒆𝒓 𝒂𝒈𝒂𝒊𝒏. <br />\n              <br />\n              我希望你过着自己引以为傲的生活。 如果你发现事实并非如此，我希望你有勇气重新开始。\n            </BriefDescription>\n            <BriefDescription>𝑯𝒂𝒗𝒆 𝒂 𝒈𝒐𝒐𝒅 𝒅𝒂𝒚. </BriefDescription>\n          </BriefHeader>\n        </BriefWrapper>\n      </GlobalContainer>\n\n      <GlobalContainer>\n        <IndexSection>\n          <Heading title=\"最近内容\" slug=\"/blog\" />\n          <RecentPreview>\n            {simplifiedLatest.map((post) => {\n              return (\n                <RecentCard key={post.slug}>\n                  <Time className=\"recent\">{post.date}</Time>\n                  <TitleLink to={post.slug}>{post.title}</TitleLink>\n                  <TagLinks>\n                    {post.categories &&\n                      post.categories\n                        .filter((cat) => cat !== 'Highlight')\n                        .map((cat) => {\n                          return (\n                            <TagLink to={`/categories/${slugify(cat)}`} key={slugify(cat)}>\n                              {cat}\n                            </TagLink>\n                          )\n                        })}\n                  </TagLinks>\n                </RecentCard>\n              )\n            })}\n          </RecentPreview>\n        </IndexSection>\n        {/* 查找posts目录下带有 Highlight 的markdown文件 */}\n        {simplifiedHighlights.length > 0 && (\n          <IndexSection>\n            <Heading title=\"热门内容\" />\n\n            <HighlightPreview>\n              {simplifiedHighlights.map((post) => {\n                return (\n                  <HighlightCard key={`Highlight-${post.slug}`}>\n                    {post.thumbnail && <GatsbyImage image={post.thumbnail} alt=\"\" />}\n                    <div>\n                      <Time>{post.date}</Time>\n                      <TitleLink to={post.slug}>{post.title}</TitleLink>\n                    </div>\n                  </HighlightCard>\n                )\n              })}\n            </HighlightPreview>\n          </IndexSection>\n        )}\n      </GlobalContainer>\n    </>\n  )\n}\n\nIndex.Layout = Layout\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    latest: allMarkdownRemark(\n      limit: 6\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            categories\n          }\n        }\n      }\n    }\n    Highlights: allMarkdownRemark(\n      limit: 12\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { eq: \"Highlight\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 80, height: 80)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { GlobalCard, GlobalContainer } from './global'\nimport { TemplateContent, TemplateGrid, TemplateSection } from './templates'\n\nexport const BlogGrid = styled(TemplateGrid)``\n\nexport const BlogContent = styled(TemplateContent)``\n\nexport const IndexSection = styled(TemplateSection)``\n\nexport const BriefWrapper = styled.div`\n  display: block;\n\n  @media screen and (min-width: 700px) {\n    display: flex;\n    align-items: center;\n    gap: 3rem;\n  }\n`\n\nexport const BriefDescription = styled.p`\n  -webkit-font-smoothing: antialiased;\n  margin-top: 3rem;\n  margin-bottom: 0;\n  font-size: 1.1rem;\n  line-height: 1.4;\n  color: ${(props) => props.theme.fontColorBase};\n  font-weight: 500;\n`\n\n\nconst Preview = styled.div`\n  display: grid;\n  gap: 1.9rem;\n\n  @media screen and (min-width: 700px) {\n    grid-template-columns: repeat(2, 1fr);\n    gap: 2.4rem;\n  }\n\n  @media screen and (min-width: 1060px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`\n\nexport const RecentPreview = styled(Preview)``\n\nexport const RecentCard = styled(GlobalCard)`\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n  min-height: 9rem;\n`\n\nexport const HighlightPreview = styled(Preview)``\n\nexport const HighlightCard = styled(GlobalCard)`\n  background: transparent;\n  padding: 1.5rem;\n  /* border: 2px solid ${(props) => props.theme.borderColor}; */\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`\n\nexport const Time = styled.time`\n  display: block;\n  font-family: ${(props) => props.theme.fontFamilyMonospace};\n  color: ${(props) => props.theme.fontColorBright};\n  font-size: 0.8rem;\n\n  &.recent {\n    color: ${(props) => props.theme.cardTimeColor};\n  }\n`\n\nexport const TitleLink = styled(Link)`\n  display: block;\n  width: 100%;\n  font-size: 1.1rem;\n  line-height: 1.2;\n  font-family: ${(props) => props.theme.fontFamilyBase};\n  color: ${(props) => props.theme.fontColorHeading};\n  font-weight: 700;\n  margin: 0.25rem 0 0.5rem;\n  padding: 0;\n  border: 0;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n    color: ${(props) => props.theme.fontColorBright};\n  }\n`\n\nexport const TagLinks = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const TagLink = styled(Link)`\n  font-family: ${(props) => props.theme.fontFamilyMonospace};\n  font-size: 0.8rem;\n  color: ${(props) => props.theme.fontColorMuted};\n  text-decoration: underline;\n`\n\nexport const SunsetContainer = styled(GlobalContainer)`\n  padding-top: 3rem;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 2.2rem;\n\n  @media screen and (max-width: 1000px) {\n    padding-top: 2rem;\n    gap: 1.5rem;\n  }\n  @media screen and (max-width: 480px) {\n    padding-top: 1rem;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 0.8rem;\n  }\n`\n"],"names":["BriefHeader","styled","BriefSubTitle","props","theme","fontColorMuted","BriefTitle","fontColorHeading","BriefPurpleTitle","highlightColor","highlight","subTitle","title","children","index","React","Header","className","PurpleTitle","HeadingContainer","HeadingTitle","fontFamilyBase","HeadingLink","Link","buttonBackgroundColor","borderRadius","fontColorBase","borderColor","fontColorBright","borderColorHover","Heading","slug","to","Index","data","latest","edges","Highlights","simplifiedLatest","useMemo","getSimplifiedPosts","simplifiedHighlights","shortTitle","thumbnails","Helmet","config","SEO","GlobalContainer","BriefWrapper","BriefDescription","IndexSection","RecentPreview","map","post","RecentCard","key","Time","date","TitleLink","TagLinks","categories","filter","cat","TagLink","slugify","length","HighlightPreview","HighlightCard","thumbnail","GatsbyImage","image","alt","Layout","BlogGrid","TemplateGrid","BlogContent","TemplateContent","TemplateSection","Preview","GlobalCard","fontFamilyMonospace","cardTimeColor","SunsetContainer"],"sourceRoot":""}