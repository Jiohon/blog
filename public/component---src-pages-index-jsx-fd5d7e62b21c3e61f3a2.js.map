{"version":3,"file":"component---src-pages-index-jsx-fd5d7e62b21c3e61f3a2.js","mappings":"mJAMaA,EAAO,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3D,OACE,0BAAQC,UAAS,SAAUD,EAAQ,QAAU,KAC1CH,GACC,uBAAKI,UAAU,aACZL,GAAa,wBAAMK,UAAU,aAAaL,GAC1CC,GAGJC,GAAS,0BAAKA,GACdC,GAAYA,EAGlB,C,mICZYG,EAAU,SAAC,GAAkC,IAAhCJ,EAA+B,EAA/BA,MAAOK,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAC5C,OACE,sBAAIH,UAAU,gBACZ,2BACE,uBAAKA,UAAU,SAASH,GACvBK,GAAe,uBAAKF,UAAU,eAAeE,IAE/CC,GACC,gBAAC,EAAAC,KAAD,CAAMJ,UAAU,SAASK,GAAIF,GAA7B,YAMP,E,8BCRc,SAASG,EAAT,GAA0B,IAATC,EAAQ,EAARA,KACxBC,EAASD,EAAKC,OAAOC,MACrBC,EAAWH,EAAKG,SAASD,MACzBE,GAAmBC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,IAAmBL,EAAzB,GAAkC,CAACA,IAC9DM,GAAqBF,EAAAA,EAAAA,UACzB,kBAAMC,EAAAA,EAAAA,IAAmBH,EAAU,CAAEK,YAAY,EAAOC,YAAY,GAApE,GACA,CAACN,IAGH,OADAO,QAAQC,IAAIJ,GAEV,2BACE,gBAACK,EAAA,EAAD,CAAQtB,MAAOuB,EAAAA,EAAAA,YACf,gBAACC,EAAA,EAAD,MAEA,uBAAKrB,UAAU,aACb,uBAAKA,UAAU,gBACb,gBAACN,EAAA,EAAD,CAAMG,MAAM,gBAAgBE,OAAK,GAC/B,qBAAGC,UAAU,gCAAb,0NAE8B,2BAC5B,2BAHF,6CAMA,qBAAGA,UAAU,gCAAb,oCAIN,uBAAKA,UAAU,aACb,2BAASA,UAAU,WACjB,gBAACC,EAAD,CAASJ,MAAM,OAAOM,KAAK,UAE3B,uBAAKH,UAAU,gBACZW,EAAiBW,KAAI,SAACC,GACrB,OACE,uBAAKvB,UAAU,gBAAgBwB,IAAKD,EAAKpB,MACvC,4BAAOoB,EAAKE,MACZ,gBAAC,EAAArB,KAAD,CAAMJ,UAAU,cAAcK,GAAIkB,EAAKpB,MACpCoB,EAAK1B,OAER,uBAAKG,UAAU,uBACZuB,EAAKG,WACHC,QAAO,SAACC,GAAD,MAAiB,cAARA,CAAT,IACPN,KAAI,SAACM,GACJ,OACE,gBAAC,EAAAxB,KAAD,CAAMJ,UAAU,MAAMK,GAAE,gBAAiBwB,EAAAA,EAAAA,IAAQD,GAAQJ,KAAKK,EAAAA,EAAAA,IAAQD,IACnEA,EAGN,KAIV,MAKJd,EAAmBgB,OAAS,GAC3B,2BAAS9B,UAAU,WACjB,gBAACC,EAAD,CAASJ,MAAM,SAEf,uBAAKG,UAAU,qBACZc,EAAmBQ,KAAI,SAACC,GACvB,OACE,uBAAKvB,UAAU,kBAAkBwB,IAAG,WAAaD,EAAKpB,MACnDoB,EAAKQ,WAAa,gBAAC,IAAD,CAAKC,MAAO,CAAEC,YAAa,OAASC,MAAOX,EAAKQ,YACnE,2BACE,4BAAOR,EAAKE,MACZ,gBAAC,EAAArB,KAAD,CAAMJ,UAAU,cAAcK,GAAIkB,EAAKpB,MACpCoB,EAAK1B,QAKf,OAOd,CAEDS,EAAM6B,OAASA,EAAAA,C","sources":["webpack://hushes/./src/components/Hero.jsx","webpack://hushes/./src/components/Heading.jsx","webpack://hushes/./src/pages/index.jsx"],"sourcesContent":["import React from 'react'\n\n/**\n * @description 大标题\n */\n\nexport const Hero = ({ highlight, subTitle, title, children, index }) => {\n  return (\n    <header className={`hero ${index ? 'index' : ''}`}>\n      {subTitle && (\n        <div className=\"sub-title\">\n          {highlight && <span className=\"highlight\">{highlight}</span>}\n          {subTitle}\n        </div>\n      )}\n      {title && <h1>{title}</h1>}\n      {children && children}\n    </header>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\n/**\n * @description 标题\n */\n\nexport const Heading = ({ title, description, slug }) => {\n  return (\n    <h2 className=\"home-heading\">\n      <div>\n        <div className=\"title\">{title}</div>\n        {description && <div className=\"description\">{description}</div>}\n      </div>\n      {slug && (\n        <Link className=\"button\" to={slug}>\n          View all\n        </Link>\n      )}\n    </h2>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport Img from 'gatsby-image'\n\nimport { Layout } from '/src/layout/index'\nimport { SEO } from '/src/components/SEO'\nimport { Heading } from '/src/components/Heading'\nimport { Hero } from '/src/components/Hero'\nimport { getSimplifiedPosts } from '/src/utils/helpers'\nimport config from '/src/utils/config'\nimport { slugify } from '/src/utils/helpers'\n\nexport default function Index({ data }) {\n  const latest = data.latest.edges\n  const Populars = data.Populars.edges\n  const simplifiedLatest = useMemo(() => getSimplifiedPosts(latest), [latest])\n  const simplifiedPopulars = useMemo(\n    () => getSimplifiedPosts(Populars, { shortTitle: false, thumbnails: true }),\n    [Populars]\n  )\n  console.log(simplifiedPopulars)\n  return (\n    <div>\n      <Helmet title={config.siteTitle} />\n      <SEO />\n\n      <div className=\"container\">\n        <div className=\"hero-wrapper\">\n          <Hero title=\"Hi, I'm  Hush\" index>\n            <p className=\"hero-description small width\">\n              𝑰 𝒉𝒐𝒑𝒆 𝒚𝒐𝒖 𝒍𝒊𝒗𝒆 𝒂 𝒍𝒊𝒇𝒆 𝒚𝒐𝒖‘𝒓𝒆 𝒑𝒓𝒐𝒖𝒅 𝒐𝒇. 𝑰𝒇 𝒚𝒐𝒖 𝒇𝒊𝒏𝒅 𝒕𝒉𝒂𝒕 𝒚𝒐𝒖’𝒓𝒆 𝒏𝒐𝒕, 𝑰 𝒉𝒐𝒑𝒆 𝒚𝒐𝒖 𝒉𝒂𝒗𝒆 𝒕𝒉𝒆 𝒔𝒕𝒓𝒆𝒏𝒈𝒕𝒉 𝒕𝒐 𝒔𝒕𝒂𝒓𝒕\n              𝒂𝒍𝒍 𝒐𝒗𝒆𝒓 𝒂𝒈𝒂𝒊𝒏. <br />\n              <br />\n              我希望你过着自己引以为傲的生活。 如果你发现事实并非如此，我希望你有勇气重新开始。\n            </p>\n            <p className=\"hero-description small width\">𝑯𝒂𝒗𝒆 𝒂 𝒈𝒐𝒐𝒅 𝒅𝒂𝒚. </p>\n          </Hero>\n        </div>\n      </div>\n      <div className=\"container\">\n        <section className=\"segment\">\n          <Heading title=\"最近内容\" slug=\"/blog\" />\n\n          <div className=\"post-preview\">\n            {simplifiedLatest.map((post) => {\n              return (\n                <div className=\"anchored card\" key={post.slug}>\n                  <time>{post.date}</time>\n                  <Link className=\"card-header\" to={post.slug}>\n                    {post.title}\n                  </Link>\n                  <div className=\"anchored categories\">\n                    {post.categories\n                      .filter((cat) => cat !== 'Highlight')\n                      .map((cat) => {\n                        return (\n                          <Link className=\"cat\" to={`/categories/${slugify(cat)}`} key={slugify(cat)}>\n                            {cat}\n                          </Link>\n                        )\n                      })}\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </section>\n\n        {/* 查找posts目录下带有 Popular 的markdown文件 */}\n        {simplifiedPopulars.length > 0 && (\n          <section className=\"segment\">\n            <Heading title=\"热门内容\" />\n\n            <div className=\"highlight-preview\">\n              {simplifiedPopulars.map((post) => {\n                return (\n                  <div className=\"muted card flex\" key={`popular-${post.slug}`}>\n                    {post.thumbnail && <Img style={{ marginRight: '5px' }} fixed={post.thumbnail} />}\n                    <div>\n                      <time>{post.date}</time>\n                      <Link className=\"card-header\" to={post.slug}>\n                        {post.title}\n                      </Link>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          </section>\n        )}\n      </div>\n    </div>\n  )\n}\n\nIndex.Layout = Layout\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    latest: allMarkdownRemark(\n      limit: 6\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            categories\n          }\n        }\n      }\n    }\n    Populars: allMarkdownRemark(\n      limit: 12\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { eq: \"Popular\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            thumbnail {\n              childImageSharp {\n                fixed(width: 50, height: 50) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Hero","highlight","subTitle","title","children","index","className","Heading","description","slug","Link","to","Index","data","latest","edges","Populars","simplifiedLatest","useMemo","getSimplifiedPosts","simplifiedPopulars","shortTitle","thumbnails","console","log","Helmet","config","SEO","map","post","key","date","categories","filter","cat","slugify","length","thumbnail","style","marginRight","fixed","Layout"],"sourceRoot":""}