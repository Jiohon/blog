{"version":3,"file":"component---src-templates-post-tsx-c1602b2858969e4a96b7.js","mappings":"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","sources":["webpack://hushes/./src/components/Sidebar/style.ts","webpack://hushes/./src/components/Sidebar/PostSidebar.tsx","webpack://hushes/./src/templates/post.tsx","webpack://hushes/./src/utils/helpers.ts"],"sourcesContent":["import { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\n\nexport const SideSticky = styled.div.attrs((props: { top: number }) => ({\n  top: `${props.top || 8}rem`,\n}))`\n  position: sticky;\n  top: ${(props) => props.top};\n`\n\nexport const SideCard = styled.div`\n  background: ${(props) => props.theme.cardBackgroundColor};\n  padding: 1.25rem;\n  border-radius: ${(props) => props.theme.borderRadius};\n  margin: 2rem 0;\n`\n\nexport const SideTitle = styled.h2`\n  color: ${(props) => props.theme.fontColorMuted};\n  font-size: 0.9rem;\n  border: none;\n  margin: 0 0 1rem !important;\n  text-transform: uppercase;\n  font-weight: 700;\n`\n\nexport const SideLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-decoration: none;\n  background-color: transparent;\n  border-radius: ${(props) => props.theme.borderRadius};\n  color: ${(props) => props.theme.fontColorBase};\n  font-size: 0.9rem;\n  font-weight: 600;\n  margin-bottom: 0.6rem;\n  padding: 0.1rem 0.3rem;\n\n  &:last-child {\n    margin-bottom: 0rem;\n  }\n\n  &.active {\n    background: ${(props) => props.theme.highlightColor};\n    color: white;\n    div {\n      color: white;\n    }\n  }\n\n  &:hover {\n    background: ${(props) => props.theme.highlightColor};\n    color: white;\n    text-decoration: none;\n    div {\n      color: white;\n    }\n  }\n`\n\nexport const SlidLinkCount = styled.div`\n  font-weight: 400;\n  font-size: 0.8rem;\n  color: ${(props) => props.theme.fontColorMuted};\n  font-family: ${(props) => props.theme.fontFamilyMonospace};\n`\n\nexport const SideTags = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 0.8rem 0.6rem;\n`\n\nexport const SideTag = styled(Link)`\n  line-height: 22px;\n  font-size: 0.75rem;\n  font-weight: 400;\n  padding: 0rem 0.5rem 0.05rem 0.5rem;\n  border: 1px solid ${(props) => props.theme.borderColor};\n  border-radius: ${(props) => props.theme.borderRadius};\n  color: ${(props) => props.theme.fontColorBase};\n  background: ${(props) => props.theme.buttonBackgroundColor} !important;\n  text-decoration: none;\n  text-transform: capitalize;\n  display: inline-block;\n  text-align: center;\n\n  &.active {\n    background: ${(props) => props.theme.highlightColor} !important;\n    border-color: ${(props) => props.theme.highlightColor} !important;\n    color: white !important;\n    font-weight: 600;\n  }\n\n  &:hover {\n    color: ${(props) => props.theme.fontColorBright};\n    border-color: ${(props) => props.theme.borderColorHover};\n    text-decoration: none;\n  }\n`\n\nexport const PostSideImage = styled(Img)`\n  margin: 0 auto;\n  margin-top: 2rem;\n  text-align: center;\n  display: block !important;\n`\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport { PostSideImage, SideCard, SideSticky, SideTag, SideTags, SideTitle } from './style'\n\nimport { FixedObject } from 'gatsby-image'\nimport { PostBySlug_markdownRemark_frontmatter_thumbnail } from '../../templates/__generated__/PostBySlug'\nimport { slugify } from '../../utils/helpers'\n\n/**\n * @description ‰æßËæπÊñáÁ´†ËØ¶ÁªÜ‰ø°ÊÅØ\n */\n\nexport const PostSidebar = ({\n  tags = [],\n  date,\n  categories = [],\n  thumbnail,\n}: {\n  date: string\n  tags?: (string | null)[] | null\n  categories?: (string | null)[] | null\n  thumbnail?: PostBySlug_markdownRemark_frontmatter_thumbnail | null\n}) => {\n  const category = categories?.filter((category) => category !== 'Highlight')\n  const { fixed } = { ...thumbnail?.childImageSharp }\n\n  return (\n    <aside>\n      <SideSticky>\n        {thumbnail && <PostSideImage fixed={fixed as FixedObject} />}\n        {/* <SideCard>\n        <h2>About me</h2>\n        <img alt=\"Tania\" className=\"sidebar-avatar\" />\n        <p>\n          Hello and thanks for visiting! My name is <Link to=\"/me\">Hush</Link>,\n          and this is my website and digital garden. üå±\n        </p>\n        <p>\n          I'm a software developer who writes articles and tutorials about\n          things that interest me. This site is and has always been free of ads,\n          trackers, social media, affiliates, and sponsored posts.\n        </p>\n        <p>I hope you enjoy the post and have a nice day.</p>\n      </SideCard> */}\n        <SideCard>\n          <SideTitle>Êó•Êúü</SideTitle>\n          <ul>\n            <li>ÂèëÂ∏É‰∫é {date}</li>\n          </ul>\n\n          {category && (\n            <div>\n              <SideTitle>Á±ªÂà´</SideTitle>\n              <ul>\n                <li>\n                  <Link to={`/categories/${slugify(category)}`}>{category}</Link>\n                </li>\n              </ul>\n            </div>\n          )}\n\n          <SideTitle>Ê†áÁ≠æ</SideTitle>\n          <SideTags>\n            {tags &&\n              tags.map((tag) => {\n                return (\n                  <SideTag key={tag} to={`/tags/${slugify(tag!)}`} activeClassName=\"active\">\n                    {tag}\n                  </SideTag>\n                )\n              })}\n          </SideTags>\n        </SideCard>\n      </SideSticky>\n    </aside>\n  )\n}\n","import { graphql, PageProps } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nimport { SEO } from '../components/SEO'\nimport { PostSidebar } from '../components/Sidebar/PostSidebar'\nimport { Layout } from '../layout/index'\nimport { GlobalContainer } from '../styles/components/global'\nimport { TemplateContent, TemplateGrid, TemplateHeader, TemplateSection } from '../styles/components/templates'\nimport config from '../utils/config'\nimport { PostBySlug, PostBySlug_markdownRemark } from './__generated__/PostBySlug'\n/**\n * @description  ÊñáÁ´† È°µÈù¢\n * @date 17/10/2022\n * @export\n * @param {PageProps<PostBySlug>} { data }\n * @return {*}\n */\nexport default function PostTemplate({ data }: PageProps<PostBySlug>) {\n  const post = data.markdownRemark!\n  const { tags, categories, title, date, thumbnail } = { ...post?.frontmatter }\n  const { slug } = { ...post?.fields }\n\n  return (\n    <>\n      <Helmet title={`${title} | ${config.siteTitle}`} />\n      <SEO postPath={slug} postNode={post as PostBySlug_markdownRemark} postSEO />\n      <GlobalContainer>\n        <TemplateGrid>\n          <TemplateContent>\n            <TemplateHeader>{title}</TemplateHeader>\n            <TemplateSection>\n              <div id={slug as string} dangerouslySetInnerHTML={{ __html: post?.html as string }} />\n            </TemplateSection>\n          </TemplateContent>\n\n          <PostSidebar date={date} tags={tags} categories={categories} thumbnail={thumbnail} />\n        </TemplateGrid>\n      </GlobalContainer>\n    </>\n  )\n}\n\nPostTemplate.Layout = Layout\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        tags\n        categories\n        thumbnail {\n          childImageSharp {\n            fixed(width: 80, height: 80) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","export function getSimplifiedPosts(posts: any[], options: any = {}): SimplifiedData[] {\n  return posts.map((post) => {\n    const { id, frontmatter, fields } = { ...post?.node } as any\n    return {\n      id: id,\n      date: frontmatter?.date,\n      slug: fields?.slug,\n      tags: frontmatter?.tags,\n      categories: frontmatter?.categories,\n      title: options.shortTitle ? frontmatter?.shortTitle : frontmatter?.title,\n      description: frontmatter?.description,\n      ...(options.thumbnails && {\n        thumbnail: frontmatter?.thumbnail?.childImageSharp?.fixed,\n      }),\n    }\n  })\n}\n\nexport function slugify(string: string | (string | null)[]): string {\n  return (\n    string &&\n    `${string}`\n      .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)!\n      .map((x) => x.toLowerCase())\n      .join('-')\n  )\n}\n\nexport function capitalize(string: string): string {\n  return string.charAt(0).toUpperCase() + string.slice(1)\n}\n"],"names":["SideSticky","styled","props","top","withConfig","SideCard","theme","cardBackgroundColor","borderRadius","SideTitle","fontColorMuted","SideLink","Link","fontColorBase","highlightColor","SlidLinkCount","fontFamilyMonospace","SideTags","SideTag","borderColor","buttonBackgroundColor","fontColorBright","borderColorHover","PostSideImage","Img","PostSidebar","tags","date","categories","thumbnail","category","filter","fixed","childImageSharp","React","to","slugify","map","tag","key","activeClassName","PostTemplate","post","data","markdownRemark","frontmatter","title","slug","fields","Helmet","config","SEO","postPath","postNode","postSEO","GlobalContainer","TemplateGrid","TemplateContent","TemplateHeader","TemplateSection","id","dangerouslySetInnerHTML","__html","html","Layout","getSimplifiedPosts","posts","options","node","shortTitle","description","thumbnails","_frontmatter$thumbnai","_frontmatter$thumbnai2","string","match","x","toLowerCase","join"],"sourceRoot":""}