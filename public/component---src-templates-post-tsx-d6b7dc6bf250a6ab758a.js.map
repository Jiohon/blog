{"version":3,"file":"component---src-templates-post-tsx-d6b7dc6bf250a6ab758a.js","mappings":"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","sources":["webpack://hushes/./src/components/Sidebar/style.ts","webpack://hushes/./src/components/Sidebar/PostSidebar.tsx","webpack://hushes/./src/templates/post.tsx"],"sourcesContent":["import { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport styled from 'styled-components'\nimport { GlobalCard } from '../../styles/components/global'\n\nexport const SideSticky = styled.div.attrs((props: { top: number }) => ({\n  top: `${props.top || 8}rem`,\n}))`\n  position: sticky;\n  top: ${(props) => props.top};\n`\n\nexport const SideCard = styled(GlobalCard)`\n  margin: 2rem 0;\n`\n\nexport const SideTitle = styled.h2`\n  color: ${(props) => props.theme.fontColorMuted};\n  font-size: 0.9rem;\n  border: none;\n  margin: 0 0 1rem !important;\n  text-transform: uppercase;\n  font-weight: 700;\n`\n\nexport const SideLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-decoration: none;\n  background-color: transparent;\n  border-radius: ${(props) => props.theme.borderRadius};\n  color: ${(props) => props.theme.fontColorBase};\n  font-size: 0.9rem;\n  font-weight: 600;\n  margin-bottom: 0.6rem;\n  padding: 0.1rem 0.3rem;\n\n  &:last-child {\n    margin-bottom: 0rem;\n  }\n\n  &.active {\n    color: ${(props) => props.theme.highlightColor};\n    div {\n      color: inherit;\n    }\n  }\n\n  &:hover {\n    color: ${(props) => props.theme.highlightColor};\n    text-decoration: none;\n    div {\n      color: inherit;\n    }\n  }\n`\n\nexport const SlidLinkCount = styled.div`\n  font-weight: 400;\n  font-size: 0.8rem;\n  color: ${(props) => props.theme.fontColorMuted};\n  font-family: ${(props) => props.theme.fontFamilyMonospace};\n`\n\nexport const SideTags = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 0.8rem 0.6rem;\n`\n\nexport const SideTag = styled(Link)`\n  line-height: 22px;\n  font-size: 0.75rem;\n  font-weight: 400;\n  padding: 0rem 0.5rem 0.05rem 0.5rem;\n  border: 1px solid ${(props) => props.theme.borderColor};\n  border-radius: ${(props) => props.theme.borderRadius};\n  color: ${(props) => props.theme.fontColorBase};\n  text-decoration: none;\n  text-transform: capitalize;\n  display: inline-block;\n  text-align: center;\n\n  &.active {\n    color: ${(props) => props.theme.highlightColor};\n    border-color: rgba(81, 182, 129, 0.3);\n    background-color: rgba(81, 182, 129, 0.18);\n  }\n\n  &:hover {\n    color: ${(props) => props.theme.highlightColor};\n    border-color: rgba(81, 182, 129, 0.3);\n    background-color: rgba(81, 182, 129, 0.15);\n    text-decoration: none;\n  }\n`\n\nexport const PostSideImage = styled(GatsbyImage)`\n  margin: 0 auto;\n  margin-top: 2rem;\n  text-align: center;\n  display: block !important;\n  width: 100px;\n`\n\nexport const Anchor = styled.li`\n  margin-bottom: 0.65rem;\n  color: ${(props) => props.theme.link};\n  cursor: pointer;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport { Anchor, PostSideImage, SideCard, SideSticky, SideTag, SideTags, SideTitle } from './style'\n\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport { FileFilterInput } from '../../../gatsby-graphql'\nimport { slugify } from '../../utils/helpers'\n\n/**\n * @description ‰æßËæπÊñáÁ´†ËØ¶ÁªÜ‰ø°ÊÅØ\n */\n\ninterface Props {\n  date: string\n  tags?: (string | null)[] | null\n  categories?: (string | null)[] | null\n  thumbnail?: FileFilterInput | null\n  headings?: ({ id?: string | null } | null)[] | null\n}\n\nexport const PostSidebar = ({ tags = [], date, categories = [], thumbnail, headings }: Props) => {\n  const categorys = categories?.filter((category) => category !== 'Highlight')\n  const { gatsbyImageData } = { ...thumbnail?.childImageSharp }\n\n  const onclick = (row: { id?: string | null }) => {\n    console.log(row, document.getElementById(row.id!))\n    document.getElementById(row.id!)?.scrollIntoView(true)\n  }\n  return (\n    <aside>\n      <SideSticky>\n        {thumbnail && <PostSideImage image={gatsbyImageData as IGatsbyImageData} alt=\"\" />}\n        {/* <SideCard>\n        <h2>About me</h2>\n        <img alt=\"Tania\" className=\"sidebar-avatar\" />\n        <p>\n          Hello and thanks for visiting! My name is <Link to=\"/me\">Hush</Link>,\n          and this is my website and digital garden. üå±\n        </p>\n        <p>\n          I'm a software developer who writes articles and tutorials about\n          things that interest me. This site is and has always been free of ads,\n          trackers, social media, affiliates, and sponsored posts.\n        </p>\n        <p>I hope you enjoy the post and have a nice day.</p>\n      </SideCard> */}\n\n        <SideCard>\n          <SideTitle>Êó•Êúü</SideTitle>\n          <ul>\n            <li>ÂèëÂ∏É‰∫é {date}</li>\n          </ul>\n\n          <SideTitle>Á±ªÂà´</SideTitle>\n          {categorys && (\n            <ul>\n              {categorys.map((category) => {\n                return (\n                  <li key=\"category\">\n                    <Link to={`/categories/${slugify(category!)}`}>{category}</Link>\n                  </li>\n                )\n              })}\n            </ul>\n          )}\n\n          <SideTitle>Ê†áÁ≠æ</SideTitle>\n          <SideTags>\n            {tags &&\n              tags.map((tag) => {\n                return (\n                  <SideTag key={tag} to={`/tags/${slugify(tag!)}`} activeClassName=\"active\">\n                    {tag}\n                  </SideTag>\n                )\n              })}\n          </SideTags>\n        </SideCard>\n\n        <SideCard>\n          <SideTitle>ÁõÆÂΩï</SideTitle>\n          <ul style={{ marginBottom: 0 }}>\n            {headings &&\n              headings.map((item) => {\n                return (\n                  item && (\n                    <Anchor key={item.id} onClick={() => onclick(item)}>\n                      {item.id}\n                    </Anchor>\n                  )\n                )\n              })}\n          </ul>\n        </SideCard>\n      </SideSticky>\n    </aside>\n  )\n}\n","import { graphql, PageProps } from 'gatsby'\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport { PostBySlugQuery } from '../../gatsby-graphql'\n\nimport { SEO } from '../components/SEO'\nimport { PostSidebar } from '../components/Sidebar/PostSidebar'\nimport { Layout } from '../layout/index'\nimport { GlobalContainer } from '../styles/components/global'\nimport { TemplateContent, TemplateGrid, TemplateHeader, TemplateSection } from '../styles/components/templates'\nimport config from '../utils/config'\n\n/**\n * @description ÊñáÁ´†È°µÈù¢\n * @date 23/10/2022\n * @export\n * @param {PageProps<PostBySlugQuery>} { data }\n * @return {*}\n */\nexport default function PostTemplate({ data }: PageProps<PostBySlugQuery>) {\n  const post = data.markdownRemark!\n  const { headings } = post\n  const { tags, categories, title, date, thumbnail } = { ...post?.frontmatter }\n  const { slug } = { ...post?.fields }\n\n  return (\n    <>\n      <Helmet title={`${title} | ${config.siteTitle}`} />\n      <SEO postPath={slug} postNode={post} postSEO />\n      <GlobalContainer>\n        <TemplateGrid>\n          <TemplateContent>\n            <TemplateHeader>{title}</TemplateHeader>\n            <TemplateSection>\n              <div id={slug as string} dangerouslySetInnerHTML={{ __html: post?.html as string }} />\n            </TemplateSection>\n          </TemplateContent>\n\n          <PostSidebar date={date} tags={tags} categories={categories} thumbnail={thumbnail} headings={headings} />\n        </TemplateGrid>\n      </GlobalContainer>\n    </>\n  )\n}\n\nPostTemplate.Layout = Layout\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      headings(depth: h4) {\n        id\n      }\n      html\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        tags\n        categories\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(width: 100, height: 100)\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["SideSticky","styled","props","top","displayName","componentId","SideCard","GlobalCard","SideTitle","theme","fontColorMuted","SideLink","Link","borderRadius","fontColorBase","highlightColor","SlidLinkCount","fontFamilyMonospace","SideTags","SideTag","borderColor","PostSideImage","GatsbyImage","Anchor","link","PostSidebar","tags","date","_ref$categories","categories","thumbnail","headings","categorys","filter","category","gatsbyImageData","childImageSharp","React","image","alt","map","key","to","slugify","tag","activeClassName","style","marginBottom","item","id","onClick","row","console","log","document","getElementById","_document$getElementB","scrollIntoView","PostTemplate","post","data","markdownRemark","frontmatter","title","slug","fields","Helmet","config","SEO","postPath","postNode","postSEO","GlobalContainer","TemplateGrid","TemplateContent","TemplateHeader","TemplateSection","dangerouslySetInnerHTML","__html","html","Layout"],"sourceRoot":""}